<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$LOCALIZE[20343]</label>
			<label2 />
			<icon>special://skin/extras/icons/DefaultTVShows.png</icon>
			<thumb>special://skin/extras/media/global_max.jpg</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Unwatched (TV Shows)</property>
			<property name="widgetType">tvshows</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Unwatched (TV Shows).xsp</property>
			<property name="widgetSortBy">dateadded</property>
			<property name="widgetSortBy.name">Date added</property>
			<property name="widgetSortByName">Date added</property>
			<property name="widgetSortOrder.name">descending</property>
			<property name="widgetSortOrderName">descending</property>
			<property name="infoline">backgroundtitle</property>
			<property name="infoline.name">Title of current (random) background (if available)</property>
			<property name="infolineName">Title of current (random) background (if available)</property>
			<property name="thumb.name">Bingie</property>
			<property name="thumbName">Bingie</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="background.name">Random Tv Shows background</property>
			<property name="backgroundName">Random Tv Shows background</property>
			<property name="widgetSortOrder">descending</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widget.1">Addon</property>
			<property name="widgetName.1">[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]</property>
			<property name="widgetType.1">videos</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1.name">[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]</property>
			<property name="widgetName.1Name">[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]</property>
			<property name="widgetLimit.1">$NUMBER[100]</property>
			<property name="widgetLimit.1.name">100</property>
			<property name="widgetLimit.1Name">100</property>
			<property name="widgetSortBy.1">dateadded</property>
			<property name="widgetSortBy.1.name">Date added</property>
			<property name="widgetSortBy.1Name">Date added</property>
			<property name="widgetSortOrder.1">ascending</property>
			<property name="widgetSortOrder.1.name">ascending</property>
			<property name="widgetSortOrder.1Name">ascending</property>
			<property name="widgetName.name">Unwatched Episodes</property>
			<property name="widgetNameName">Unwatched Episodes</property>
			<property name="widgetstyle.1">poster</property>
			<property name="widgetstyle.1.name">Poster</property>
			<property name="widgetstyle.1Name">Poster</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">TV Shows (Classics)</property>
			<property name="widgetType.2">tvshows</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/TV Shows (Classics).xsp</property>
			<property name="widgetstyle.2">poster</property>
			<property name="widgetstyle.2.name">Poster</property>
			<property name="widgetstyle.2Name">Poster</property>
			<property name="widgetTags.2">auto</property>
			<property name="widgetTags.2.name">Skin default</property>
			<property name="widgetTags.2Name">Skin default</property>
			<property name="widget.3">Addon</property>
			<property name="widgetName.3">[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]</property>
			<property name="widgetType.3">videos</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widgetName.3.name">[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]</property>
			<property name="widgetName.3Name">[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>TV Guide</label>
			<label2>Live TV</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvguide</property>
			<property name="defaultID">22020</property>
			<property name="background">smb://NAS/Media/Backgrounds/Live TV/</property>
			<property name="background.name">Custom multi image (folder)</property>
			<property name="backgroundName">Custom multi image (folder)</property>
			<property name="widget">plugin://script.skin.helper.widgets/?action=pvrlisting</property>
			<property name="widgetName">Recently played TV channels</property>
			<property name="widgetType">pvr</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">plugin://script.skin.helper.widgets/?action=lastchannels&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="infoline">pvr</property>
			<property name="infoline.name">PVR information</property>
			<property name="infolineName">PVR information</property>
			<property name="widgetTags">enable</property>
			<property name="widgetTags.name">Enabled</property>
			<property name="widgetTagsName">Enabled</property>
			<visible>System.HasPVRAddon</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvguide</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>Weather</label>
			<label2>Favourite</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>smb://NAS/Media/Backgrounds/Weather/</thumb>
			<property name="labelID">weather</property>
			<property name="defaultID">accuweather</property>
			<property name="thumb.name">Custom multi image (folder)</property>
			<property name="thumbName">Custom multi image (folder)</property>
			<property name="background.name">Categories</property>
			<property name="backgroundName">Categories</property>
			<property name="background">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]$INFO[Skin.String(WeatherFanArtPack.ext)]</property>
			<property name="multiwidget">single</property>
			<property name="multiwidget.name">Single widget</property>
			<property name="multiwidgetName">Single widget</property>
			<property name="widget">static</property>
			<property name="widgetName">Weather</property>
			<property name="widgetType">static</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetstyle">square</property>
			<property name="widgetstyle.name">Square</property>
			<property name="widgetstyleName">Square</property>
			<property name="infoline">weather</property>
			<property name="infoline.name">Weather</property>
			<property name="infolineName">Weather</property>
			<property name="widgetTags">enable</property>
			<property name="widgetTags.name">Enabled</property>
			<property name="widgetTagsName">Enabled</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">StartAndroidActivity("com.accuweather.android")</onclick>
			<property name="path">StartAndroidActivity("com.accuweather.android")</property>
			<property name="list">StartAndroidActivity(com.accuweather.android)</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>Apps</label>
			<label2>Custom item</label2>
			<icon>resource://resource.images.skinicons.wide/addons.png</icon>
			<thumb />
			<property name="labelID">apps</property>
			<property name="defaultID">10040</property>
			<property name="translatedPath">ActivateWindow(Programs,Addons,return)</property>
			<property name="background">smb://NAS/Media/Backgrounds/Apps/</property>
			<property name="background.name">Custom multi image (folder)</property>
			<property name="backgroundName">Custom multi image (folder)</property>
			<property name="widgetstyle">square</property>
			<property name="widgetstyle.name">Square</property>
			<property name="widgetstyleName">Square</property>
			<property name="widgetstyle.1">square</property>
			<property name="widgetstyle.1.name">Square</property>
			<property name="widgetstyle.1Name">Square</property>
			<property name="widgetSortBy.name">Title</property>
			<property name="widgetSortByName">Title</property>
			<property name="widgetSortOrder.name">ascending</property>
			<property name="widgetSortOrderName">ascending</property>
			<property name="widgetSortBy.1">lastplayed</property>
			<property name="widgetSortBy.1.name">Last played</property>
			<property name="widgetSortBy.1Name">Last played</property>
			<property name="widgetSortOrder.1.name">ascending</property>
			<property name="widgetSortOrder.1Name">ascending</property>
			<property name="widgetSortOrder.1">ascending</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None - Show RSS news feeds</property>
			<property name="infolineName">None - Show RSS news feeds</property>
			<property name="widgetSortBy">title</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">apps</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>Settings</label>
			<label2>Custom item</label2>
			<icon>special://skin/extras/icons/DefaultAddonService.png</icon>
			<thumb>smb://NAS/Media/Backgrounds/System/</thumb>
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="thumb.name">Custom multi image (folder)</property>
			<property name="thumbName">Custom multi image (folder)</property>
			<property name="background">smb://NAS/Media/Backgrounds/System/</property>
			<property name="background.name">Custom multi image (folder)</property>
			<property name="backgroundName">Custom multi image (folder)</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None - Show RSS news feeds</property>
			<property name="infolineName">None - Show RSS news feeds</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widget">static</property>
			<property name="widgetName">System info</property>
			<property name="widgetType">static</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widgetFixedFocus">enabled</property>
			<property name="widgetTags.name">Skin default</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>special://skin/extras/icons/power.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">power</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[2]</label>
			<label2 />
			<icon>special://skin/extras/icons/DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</property>
			<property name="background.name">Random music artists background</property>
			<property name="backgroundName">Random music artists background</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Music)</onclick>
			<property name="path">ActivateWindow(Music)</property>
			<property name="list">Music</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">music</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>Music Videos</label>
			<label2>Music videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<property name="widget">librarydataprovider</property>
			<property name="widgetName">Random Music Videos</property>
			<property name="widgetType">musicvideos</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">plugin://service.library.data.provider?type=randommusicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]</property>
			<property name="infoline">backgroundtitle</property>
			<property name="infoline.name">Title of current (random) background (if available)</property>
			<property name="infolineName">Title of current (random) background (if available)</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</property>
			<property name="background.name">Random music videos background</property>
			<property name="backgroundName">Random music videos background</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large</property>
			<property name="widgetstyleName">Landscape Large</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTags.name">Skin default</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widgetSortBy">random</property>
			<property name="widgetSortBy.name">Random</property>
			<property name="widgetSortByName">Random</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">musicvideos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>Smart Home</label>
			<label2>Favourite</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>androidapp://sources/apps/com.hubitat.app.png</thumb>
			<property name="labelID">smarthome</property>
			<property name="defaultID">hubitat</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>Gaming</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">gaming</property>
			<property name="defaultID" />
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>Home Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">homemovies</property>
			<property name="defaultID">familyhomemoviecollection</property>
			<property name="background">$INFO[Window(Home).Property(playlist.6.image)]</property>
			<property name="background.name">Home Movies (All)</property>
			<property name="backgroundName">Home Movies (All)</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Unwatched (Home Movies)</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Unwatched (Home Movies).xsp</property>
			<property name="widgetSortBy">dateadded</property>
			<property name="widgetSortBy.name">Date added</property>
			<property name="widgetSortByName">Date added</property>
			<property name="widgetSortOrder">descending</property>
			<property name="widgetSortOrder.name">descending</property>
			<property name="widgetSortOrderName">descending</property>
			<property name="infoline">backgroundtitle</property>
			<property name="infoline.name">Title of current (random) background (if available)</property>
			<property name="infolineName">Title of current (random) background (if available)</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widget.1">Playlist</property>
			<property name="widgetName.1">Unwatched (Home Holiday Movies)</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Unwatched (Home Holiday Movies).xsp</property>
			<property name="widgetstyle.1">poster</property>
			<property name="widgetstyle.1.name">Poster</property>
			<property name="widgetstyle.1Name">Poster</property>
			<property name="widgetSortBy.1">year</property>
			<property name="widgetSortBy.1.name">Year</property>
			<property name="widgetSortBy.1Name">Year</property>
			<property name="widgetSortOrder.1">descending</property>
			<property name="widgetSortOrder.1.name">descending</property>
			<property name="widgetSortOrder.1Name">descending</property>
			<property name="widgetTags.1">auto</property>
			<property name="widgetTags.1.name">Skin default</property>
			<property name="widgetTags.1Name">Skin default</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTags.name">Skin default</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">Home Movies</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/Home Movies.xsp</property>
			<property name="widgetstyle.2">poster</property>
			<property name="widgetstyle.2.name">Poster</property>
			<property name="widgetstyle.2Name">Poster</property>
			<property name="widgetSortBy.2">year</property>
			<property name="widgetSortBy.2.name">Year</property>
			<property name="widgetSortBy.2Name">Year</property>
			<property name="widgetSortOrder.2">descending</property>
			<property name="widgetSortOrder.2.name">descending</property>
			<property name="widgetSortOrder.2Name">descending</property>
			<property name="widgetTags.2">auto</property>
			<property name="widgetTags.2.name">Skin default</property>
			<property name="widgetTags.2Name">Skin default</property>
			<property name="widget.3">Playlist</property>
			<property name="widgetName.3">Home Movies (Holiday)</property>
			<property name="widgetType.3">movies</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">special://profile/playlists/video/Home Movies (Holiday).xsp</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,special://profile/playlists/video/Family Home Movie Collection.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Family Home Movie Collection.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Family Home Movie Collection.xsp</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">homemovies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>Photos</label>
			<label2>Favourite</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>/storage/NAS/Media/Backgrounds/PSMC Folder Icons/Photos.png</thumb>
			<property name="labelID">photos</property>
			<property name="defaultID">photos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.PicturesBackground)]</property>
			<property name="background.name">Random pictures background</property>
			<property name="backgroundName">Random pictures background</property>
			<property name="widget">source</property>
			<property name="widgetName">Photos</property>
			<property name="widgetType">picture</property>
			<property name="widgetTarget">pictures</property>
			<property name="widgetPath">smb://NAS/Media/Photos/</property>
			<property name="widgetstyle">square</property>
			<property name="widgetstyle.name">Square</property>
			<property name="widgetstyleName">Square</property>
			<property name="widgetSortBy">random</property>
			<property name="widgetSortBy.name">Random</property>
			<property name="widgetSortByName">Random</property>
			<property name="infoline">backgroundtitle</property>
			<property name="infoline.name">Title of current (random) background (if available)</property>
			<property name="infolineName">Title of current (random) background (if available)</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(10002,"smb://NAS/Media/Photos/",return)</onclick>
			<property name="path">ActivateWindow(10002,"smb://NAS/Media/Photos/",return)</property>
			<property name="list">smb://NAS/Media/Photos/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">photos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>Holidays</label>
			<label2>Video Playlist</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">holidays</property>
			<property name="defaultID">holidaymovies</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>PLAY DISC</label>
			<label2 />
			<icon>special://skin/extras/icons/Disc.png</icon>
			<thumb />
			<property name="labelID">31958</property>
			<property name="defaultID">playdisc</property>
			<visible>System.HasMediaDVD</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">PlayDisc</onclick>
			<property name="path">PlayDisc</property>
			<property name="list">PlayDisc</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-31958</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>Sports - PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">sports-ppvs</property>
			<property name="defaultID">sports-ppvs</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None</property>
			<property name="infolineName">None</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<property name="background">$INFO[Window(Home).Property(playlist.27.image)]</property>
			<property name="background.name">Sports PPV's (All)</property>
			<property name="backgroundName">Sports PPV's (All)</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Unwatched (WWE PPV's)</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Unwatched (WWE PPV's).xsp</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widgetSortBy">year</property>
			<property name="widgetSortBy.name">Year</property>
			<property name="widgetSortByName">Year</property>
			<property name="widgetSortOrder">descending</property>
			<property name="widgetSortOrder.name">descending</property>
			<property name="widgetSortOrderName">descending</property>
			<property name="widget.1">Playlist</property>
			<property name="widgetName.1">Unwatched (UFC PPV's)</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Unwatched (UFC PPV's).xsp</property>
			<property name="widgetSortBy.1">year</property>
			<property name="widgetSortBy.1.name">Year</property>
			<property name="widgetSortBy.1Name">Year</property>
			<property name="widgetSortOrder.1">descending</property>
			<property name="widgetSortOrder.1.name">descending</property>
			<property name="widgetSortOrder.1Name">descending</property>
			<property name="widgetTags.1">auto</property>
			<property name="widgetTags.1.name">Skin default</property>
			<property name="widgetTags.1Name">Skin default</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTags.name">Skin default</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">Sports PPV's (WWE All PPVs)</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/Sports PPV's (WWE All PPVs).xsp</property>
			<property name="widgetSortBy.2">year</property>
			<property name="widgetSortBy.2.name">Year</property>
			<property name="widgetSortBy.2Name">Year</property>
			<property name="widgetSortOrder.2">descending</property>
			<property name="widgetSortOrder.2.name">descending</property>
			<property name="widgetSortOrder.2Name">descending</property>
			<property name="widgetTags.2">auto</property>
			<property name="widgetTags.2.name">Skin default</property>
			<property name="widgetTags.2Name">Skin default</property>
			<property name="widget.3">Playlist</property>
			<property name="widgetName.3">Sports PPV's (UFC All PPVs)</property>
			<property name="widgetType.3">movies</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">special://profile/playlists/video/Sports PPV's (UFC All PPVs).xsp</property>
			<property name="widgetSortBy.3">year</property>
			<property name="widgetSortBy.3.name">Year</property>
			<property name="widgetSortBy.3Name">Year</property>
			<property name="widgetSortOrder.3">descending</property>
			<property name="widgetSortOrder.3.name">descending</property>
			<property name="widgetSortOrder.3Name">descending</property>
			<property name="widgetTags.3">auto</property>
			<property name="widgetTags.3.name">Skin default</property>
			<property name="widgetTags.3Name">Skin default</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,special://profile/playlists/video/Sports - PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Sports - PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Sports - PPVs.xsp</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">sports-ppvs</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="16">
			<property name="id">$NUMBER[16]</property>
			<label>On-Stage</label>
			<label2>Video Playlist</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">on-stage</property>
			<property name="defaultID">on-stage</property>
			<property name="background">$INFO[Window(Home).Property(playlist.10.image)]</property>
			<property name="background.name">On-Stage (All)</property>
			<property name="backgroundName">On-Stage (All)</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Unwatched (Stand-Up Comedy)</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Unwatched (Stand-Up Comedy).xsp</property>
			<property name="widgetSortBy">dateadded</property>
			<property name="widgetSortBy.name">Date added</property>
			<property name="widgetSortByName">Date added</property>
			<property name="widgetSortOrder">descending</property>
			<property name="widgetSortOrder.name">descending</property>
			<property name="widgetSortOrderName">descending</property>
			<property name="widget.1">Playlist</property>
			<property name="widgetName.1">Unwatched (Music Concerts)</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Unwatched (Music Concerts).xsp</property>
			<property name="widgetSortBy.1">dateadded</property>
			<property name="widgetSortBy.1.name">Date added</property>
			<property name="widgetSortBy.1Name">Date added</property>
			<property name="widgetSortOrder.1">descending</property>
			<property name="widgetSortOrder.1.name">descending</property>
			<property name="widgetSortOrder.1Name">descending</property>
			<property name="infoline">none</property>
			<property name="infoline.name">None</property>
			<property name="infolineName">None</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTags.name">Skin default</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widgetstyle.1">poster</property>
			<property name="widgetstyle.1.name">Poster</property>
			<property name="widgetstyle.1Name">Poster</property>
			<property name="widgetTags.1">auto</property>
			<property name="widgetTags.1.name">Skin default</property>
			<property name="widgetTags.1Name">Skin default</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">On-Stage (Stand-Up Comedy)</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/On-Stage (Stand-Up Comedy).xsp</property>
			<property name="widget.3">Playlist</property>
			<property name="widgetName.3">On-Stage (Music Concerts)</property>
			<property name="widgetType.3">movies</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">special://profile/playlists/video/On-Stage (Music Concerts).xsp</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,special://profile/playlists/video/On-Stage.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/On-Stage.xsp,return)</property>
			<property name="list">special://profile/playlists/video/On-Stage.xsp</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">on-stage</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="17">
			<property name="id">$NUMBER[17]</property>
			<label>$LOCALIZE[20342]</label>
			<label2 />
			<icon>special://skin/extras/icons/DefaultMovies.png</icon>
			<thumb />
			<property name="labelID">20342</property>
			<property name="defaultID">movies</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Unwatched (Movies)</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Unwatched (Movies).xsp</property>
			<property name="widgetSortBy">dateadded</property>
			<property name="widgetSortBy.name">Date added</property>
			<property name="widgetSortByName">Date added</property>
			<property name="widgetSortOrder">descending</property>
			<property name="widgetSortOrder.name">descending</property>
			<property name="widgetSortOrderName">descending</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="background.name">Random movies background</property>
			<property name="backgroundName">Random movies background</property>
			<property name="infoline">backgroundtitle</property>
			<property name="infoline.name">Title of current (random) background (if available)</property>
			<property name="infolineName">Title of current (random) background (if available)</property>
			<property name="widgetstyle">poster</property>
			<property name="widgetstyle.name">Poster</property>
			<property name="widgetstyleName">Poster</property>
			<property name="widgetTags">auto</property>
			<property name="widgetTags.name">Skin default</property>
			<property name="widgetTagsName">Skin default</property>
			<property name="widget.1">Addon</property>
			<property name="widgetName.1">[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">plugin://plugin.video.fuzzybritches_v3/?action=movies&amp;url=theaters&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetstyle.1">poster</property>
			<property name="widgetstyle.1.name">Poster</property>
			<property name="widgetstyle.1Name">Poster</property>
			<property name="widgetSortBy.1">dateadded</property>
			<property name="widgetSortBy.1.name">Date added</property>
			<property name="widgetSortBy.1Name">Date added</property>
			<property name="widgetSortOrder.1">ascending</property>
			<property name="widgetSortOrder.1.name">ascending</property>
			<property name="widgetSortOrder.1Name">ascending</property>
			<property name="widgetName.1.name">[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]</property>
			<property name="widgetName.1Name">[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]</property>
			<property name="widgetTags.1">auto</property>
			<property name="widgetTags.1.name">Skin default</property>
			<property name="widgetTags.1Name">Skin default</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),max) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-20342</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR lightslategrey]• [/COLOR][/B]FB Tools[B][COLOR lightslategrey] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftools.png/</thumb>
			<property name="labelID">b-colorlightslategrey-color-b-fbtools-b-colorlightslategrey-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR crimson]• [/COLOR][/B]Search for a TV Show[B][COLOR crimson] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch2.png/</thumb>
			<property name="labelID">b-colorcrimson-color-b-searchforatvshow-b-colorcrimson-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvSearch</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>Random Crime Shows</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomcrimeshows</property>
			<property name="defaultID">randomtvshows-crime</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Upcoming Episodes</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.tv.show.next.aired%2ficon.png/</thumb>
			<property name="labelID">script.tv.show.next.aired</property>
			<property name="defaultID">script.tv.show.next.aired</property>
			<visible>[System.HasAddon(script.tv.show.next.aired)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>RunAddOn(script.tv.show.next.aired)</onclick>
			<property name="path">RunAddOn(script.tv.show.next.aired)</property>
			<property name="list">RunAddOn(script.tv.show.next.aired)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]My Collection[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftrakt.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-mycollection-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]New TV Shows[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnew-tvshows.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-newtvshows-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR yellow]• [/COLOR][/B]Networks[B][COLOR yellow] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnetworks.png/</thumb>
			<property name="labelID">b-coloryellow-color-b-networks-b-coloryellow-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">1</property>
			<label>Real Debrid</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">realdebrid</property>
			<property name="defaultID">realdebrid</property>
			<property name="translatedPath">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">1</property>
			<label>Cops</label>
			<label2>Video Playlist</label2>
			<icon>special://skin/extras/icons/DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">cops</property>
			<property name="defaultID">cops</property>
			<onclick>PlayMedia(special://profile/playlists/video/Cops.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">1</property>
			<label>Search for Show in Seren</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2fcom.papaw.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.seren%2fico-seren-2.jpg/</thumb>
			<property name="labelID">searchforshowinseren</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>Channel List</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">channellist</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvguide)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvguide)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>Live Channels</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-livechannels.png</thumb>
			<property name="labelID">livechannels</property>
			<property name="defaultID">livechannels</property>
			<onclick>StartAndroidActivity("com.google.android.tv")</onclick>
			<property name="path">StartAndroidActivity("com.google.android.tv")</property>
			<property name="list">StartAndroidActivity(com.google.android.tv)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvguide)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>PlutoTV Guide</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.plutotv%2fresources%2fimages%2ficon.png/</thumb>
			<property name="labelID">plutotvguide</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</property>
			<property name="list">plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvguide)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Last Local TV Channel</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">lastlocaltvchannel</property>
			<property name="defaultID">32066</property>
			<visible>[PVR.HasTVChannels] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvguide)</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Weather</label2>
			<icon>DefaultAddonWeather.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<visible>[!String.IsEmpty(Weather.Plugin)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),weather)</visible>
			<onclick>ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">weather</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>special://skin/extras/icons/DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.trakt%2ficon.png/</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<visible>[False] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR white][B]SPEEDTEST[/B][/COLOR]</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">colorwhite-b-speedtest-b-color</property>
			<property name="defaultID">colorwhite-b-speedtest-b-color</property>
			<property name="translatedPath">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<onclick>PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">PlayMedia(plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1036]</label>
			<label2>Favourites</label2>
			<icon>DefaultAddonsInstalled.png</icon>
			<thumb />
			<property name="labelID">1036</property>
			<property name="defaultID">1036</property>
			<visible>[False] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),apps)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>Log Viewer</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.logviewer%2ficon.png/</thumb>
			<property name="labelID">script.logviewer</property>
			<property name="defaultID">script.logviewer</property>
			<onclick>RunAddOn(script.logviewer)</onclick>
			<property name="path">RunAddOn(script.logviewer)</property>
			<property name="list">RunAddOn(script.logviewer)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>Event log</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Force Close</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.close.kodi%2fresources%2fart%2fforce.png/</thumb>
			<property name="labelID">forceclose</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-33060)</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[2]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">2</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>shortcuts/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(1107,return)</onclick>
			<property name="path">ActivateWindow(1107,return)</property>
			<property name="list">1107</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/artists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/artists/,return)</property>
			<property name="list">videodb://musicvideos/artists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/genres,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/genres,return)</property>
			<property name="list">videodb://musicvideos/genres</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</property>
			<property name="list">videodb://recentlyaddedmusicvideos/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/years/,return)</property>
			<property name="list">videodb://musicvideos/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/tags/,return)</property>
			<property name="list">videodb://musicvideos/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>Hubitat</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-hubitat.png</thumb>
			<property name="labelID">hubitat</property>
			<property name="defaultID">hubitat</property>
			<onclick>StartAndroidActivity("com.hubitat.app")</onclick>
			<property name="path">StartAndroidActivity("com.hubitat.app")</property>
			<property name="list">StartAndroidActivity(com.hubitat.app)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Yatse</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/org.leetzone.android.yatsewidgetfree.png</thumb>
			<property name="labelID">yatse</property>
			<property name="defaultID">yatse</property>
			<onclick>StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</onclick>
			<property name="path">StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</property>
			<property name="list">StartAndroidActivity(org.leetzone.android.yatsewidgetfree)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>ihc</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/cn.com.broadlink.econtrol.plus.png</thumb>
			<property name="labelID">ihc</property>
			<property name="defaultID">ihc</property>
			<onclick>StartAndroidActivity("cn.com.broadlink.econtrol.plus")</onclick>
			<property name="path">StartAndroidActivity("cn.com.broadlink.econtrol.plus")</property>
			<property name="list">StartAndroidActivity(cn.com.broadlink.econtrol.plus)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>WeBack</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.yugong.Backome.png</thumb>
			<property name="labelID">weback</property>
			<property name="defaultID">weback</property>
			<onclick>StartAndroidActivity("com.yugong.Backome")</onclick>
			<property name="path">StartAndroidActivity("com.yugong.Backome")</property>
			<property name="list">StartAndroidActivity(com.yugong.Backome)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>eWeLink</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.coolkit.png</thumb>
			<property name="labelID">ewelink</property>
			<property name="defaultID">ewelink</property>
			<onclick>StartAndroidActivity("com.coolkit")</onclick>
			<property name="path">StartAndroidActivity("com.coolkit")</property>
			<property name="list">StartAndroidActivity(com.coolkit)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>Home Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">homemovies</property>
			<property name="defaultID">homemovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Home Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Holiday Home Videos</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">holidayhomevideos</property>
			<property name="defaultID">holidayhomevideos</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Holiday Home Videos.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingmovies</property>
			<property name="defaultID">thanksgivingmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Christmas Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">christmasmovies</property>
			<property name="defaultID">christmasmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Christmas.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving TV</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingtv</property>
			<property name="defaultID">thanksgivingtv</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving TV.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Random Holiday Music</label>
			<label2>Music Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomholidaymusic</property>
			<property name="defaultID">randomholidaymusic</property>
			<onclick>PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[31485]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31485</property>
			<property name="defaultID">31485</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-31958)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[600]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">600</property>
			<property name="defaultID">600</property>
			<visible>[System.HasMediaAudioCD] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-31958)</visible>
			<onclick>RipCD</onclick>
			<property name="path">RipCD</property>
			<property name="list">RipCD</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">wweppvs</property>
			<property name="defaultID">wweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/WWE PPVs.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedwweppvs</property>
			<property name="defaultID">unwatchedwweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched WWE PPVs.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedufcppvs</property>
			<property name="defaultID">unwatchedufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched UFC PPVS.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">ufcppvs</property>
			<property name="defaultID">ufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/UFP PPVS.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>Stand-Up Comedy</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">stand-upcomedy</property>
			<property name="defaultID">stand-upcomedy</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Stand-Up Comedy.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>Music Concerts</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicconcerts</property>
			<property name="defaultID">musicconcerts</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Music Concerts.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>Plays</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">plays</property>
			<property name="defaultID">plays</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Plays.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>Musicals</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicals</property>
			<property name="defaultID">musicals</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Musicals.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">17</property>
			<label>Unwatched Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedmovies</property>
			<property name="defaultID">unwatchedmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">17</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">17</property>
			<label>[B][COLOR blue]• [/COLOR][/B][COLOR ghostwhite]Search for Movie[/COLOR][B][COLOR blue] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch.png/</thumb>
			<property name="labelID">b-colorblue-color-b-colorghostwhite-searchformovie-color-b-colorblue-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=movieSearch</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">17</property>
			<label>In Progress Movies</label>
			<label2>Skin Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">inprogressmovies</property>
			<property name="defaultID">inprogressmovies</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR lightslategrey]• [/COLOR][/B]FB Tools[B][COLOR lightslategrey] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftools.png/</thumb>
			<property name="labelID">b-colorlightslategrey-color-b-fbtools-b-colorlightslategrey-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR crimson]• [/COLOR][/B]Search for a TV Show[B][COLOR crimson] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch2.png/</thumb>
			<property name="labelID">b-colorcrimson-color-b-searchforatvshow-b-colorcrimson-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>Random Crime Shows</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomcrimeshows</property>
			<property name="defaultID">randomtvshows-crime</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Upcoming Episodes</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.tv.show.next.aired%2ficon.png/</thumb>
			<property name="labelID">script.tv.show.next.aired</property>
			<property name="defaultID">script.tv.show.next.aired</property>
			<visible>System.HasAddon(script.tv.show.next.aired)</visible>
			<onclick>RunAddOn(script.tv.show.next.aired)</onclick>
			<property name="path">RunAddOn(script.tv.show.next.aired)</property>
			<property name="list">RunAddOn(script.tv.show.next.aired)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]My Collection[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftrakt.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-mycollection-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]New TV Shows[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnew-tvshows.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-newtvshows-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR yellow]• [/COLOR][/B]Networks[B][COLOR yellow] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnetworks.png/</thumb>
			<property name="labelID">b-coloryellow-color-b-networks-b-coloryellow-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">1</property>
			<label>Real Debrid</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">realdebrid</property>
			<property name="defaultID">realdebrid</property>
			<property name="translatedPath">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">1</property>
			<label>Cops</label>
			<label2>Video Playlist</label2>
			<icon>special://skin/extras/icons/DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">cops</property>
			<property name="defaultID">cops</property>
			<onclick>PlayMedia(special://profile/playlists/video/Cops.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">1</property>
			<label>Search for Show in Seren</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2fcom.papaw.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.seren%2fico-seren-2.jpg/</thumb>
			<property name="labelID">searchforshowinseren</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR lightslategrey]• [/COLOR][/B]FB Tools[B][COLOR lightslategrey] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftools.png/</thumb>
			<property name="labelID">b-colorlightslategrey-color-b-fbtools-b-colorlightslategrey-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=toolNavigator</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR crimson]• [/COLOR][/B]Search for a TV Show[B][COLOR crimson] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2ftv.psmc.www%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch2.png/</thumb>
			<property name="labelID">b-colorcrimson-color-b-searchforatvshow-b-colorcrimson-color-b</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvSearch</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>Random Crime Shows</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomcrimeshows</property>
			<property name="defaultID">randomtvshows-crime</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Random TV Shows (Crime).xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>Upcoming Episodes</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.tv.show.next.aired%2ficon.png/</thumb>
			<property name="labelID">script.tv.show.next.aired</property>
			<property name="defaultID">script.tv.show.next.aired</property>
			<visible>[System.HasAddon(script.tv.show.next.aired)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>RunAddOn(script.tv.show.next.aired)</onclick>
			<property name="path">RunAddOn(script.tv.show.next.aired)</property>
			<property name="list">RunAddOn(script.tv.show.next.aired)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]My Collection[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2ftrakt.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-mycollection-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=traktcollection</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR firebrick]• [/COLOR][/B]New TV Shows[B][COLOR firebrick] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnew-tvshows.png/</thumb>
			<property name="labelID">b-colorfirebrick-color-b-newtvshows-b-colorfirebrick-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">1</property>
			<label>[B][COLOR yellow]• [/COLOR][/B]Networks[B][COLOR yellow] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fnetworks.png/</thumb>
			<property name="labelID">b-coloryellow-color-b-networks-b-coloryellow-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">1</property>
			<label>Real Debrid</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">realdebrid</property>
			<property name="defaultID">realdebrid</property>
			<property name="translatedPath">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<onclick>ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</onclick>
			<property name="path">ActivateWindow(10025,"plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=myFilesFolder&amp;action_args=%7b%22debrid_provider%22%3a%20%22real_debrid%22%2c%20%22id%22%3a%20null%7d&amp;from_widget=false</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">1</property>
			<label>Cops</label>
			<label2>Video Playlist</label2>
			<icon>special://skin/extras/icons/DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">cops</property>
			<property name="defaultID">cops</property>
			<onclick>PlayMedia(special://profile/playlists/video/Cops.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/video/Cops.xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">1</property>
			<label>Search for Show in Seren</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2fcom.papaw.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.seren%2fico-seren-2.jpg/</thumb>
			<property name="labelID">searchforshowinseren</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true",return)</property>
			<property name="list">plugin://plugin.video.seren/?action=showsSearchHistory&amp;from_widget=true</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-tvguide">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>Channel List</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">channellist</property>
			<property name="defaultID">19019</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>Live Channels</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-livechannels.png</thumb>
			<property name="labelID">livechannels</property>
			<property name="defaultID">livechannels</property>
			<onclick>StartAndroidActivity("com.google.android.tv")</onclick>
			<property name="path">StartAndroidActivity("com.google.android.tv")</property>
			<property name="list">StartAndroidActivity(com.google.android.tv)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>PlutoTV Guide</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.plutotv%2fresources%2fimages%2ficon.png/</thumb>
			<property name="labelID">plutotvguide</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</property>
			<property name="list">plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Last Local TV Channel</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">lastlocaltvchannel</property>
			<property name="defaultID">32066</property>
			<visible>PVR.HasTVChannels</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-tvguide">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>Channel List</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">channellist</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),tvguide)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[22020]</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),tvguide)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>Live Channels</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-livechannels.png</thumb>
			<property name="labelID">livechannels</property>
			<property name="defaultID">livechannels</property>
			<onclick>StartAndroidActivity("com.google.android.tv")</onclick>
			<property name="path">StartAndroidActivity("com.google.android.tv")</property>
			<property name="list">StartAndroidActivity(com.google.android.tv)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvguide)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>PlutoTV Guide</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.video.plutotv%2fresources%2fimages%2ficon.png/</thumb>
			<property name="labelID">plutotvguide</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide",return)</property>
			<property name="list">plugin://plugin.video.plutotv/?url=&amp;mode=20&amp;name=Guide</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvguide)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>Last Local TV Channel</label>
			<label2>Live TV</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">lastlocaltvchannel</property>
			<property name="defaultID">32066</property>
			<visible>[PVR.HasTVChannels] + String.IsEqual(Window(10000).Property(submenuVisibility),tvguide)</visible>
			<onclick>PlayPvrTV</onclick>
			<property name="path">PlayPvrTV</property>
			<property name="list">PlayPvrTV</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvguide</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-weather">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Weather</label2>
			<icon>DefaultAddonWeather.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick>ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">weather</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-weather">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Weather</label2>
			<icon>DefaultAddonWeather.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<visible>[!String.IsEmpty(Weather.Plugin)] + String.IsEqual(Window(10000).Property(submenuVisibility),weather)</visible>
			<onclick>ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">weather</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-apps">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>special://skin/extras/icons/DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.trakt%2ficon.png/</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR white][B]SPEEDTEST[/B][/COLOR]</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">colorwhite-b-speedtest-b-color</property>
			<property name="defaultID">colorwhite-b-speedtest-b-color</property>
			<property name="translatedPath">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<onclick>PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">PlayMedia(plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=,return)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1036]</label>
			<label2>Favourites</label2>
			<icon>DefaultAddonsInstalled.png</icon>
			<thumb />
			<property name="labelID">1036</property>
			<property name="defaultID">1036</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-apps">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>special://skin/extras/icons/DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.trakt%2ficon.png/</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1043]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1043</property>
			<property name="defaultID">1043</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR white][B]SPEEDTEST[/B][/COLOR]</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">colorwhite-b-speedtest-b-color</property>
			<property name="defaultID">colorwhite-b-speedtest-b-color</property>
			<property name="translatedPath">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<onclick>PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">PlayMedia("plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">PlayMedia(plugin://plugin.program.psmcmaintenance/?url=ur&amp;action=speedtest&amp;name=%5BCOLOR+white%5D%5BB%5DSPEEDTEST%5B%2FB%5D%5B%2FCOLOR%5D&amp;icon=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ficon.gif&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Ftv.psmc.www%2Ffiles%2F.kodi%2Faddons%2Fplugin.program.psmcmaintenance%2Ffanart.jpg&amp;description=,return)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[10040]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(Addonbrowser)</onclick>
			<property name="path">ActivateWindow(Addonbrowser)</property>
			<property name="list">Addonbrowser</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<property name="group">apps</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1036]</label>
			<label2>Favourites</label2>
			<icon>DefaultAddonsInstalled.png</icon>
			<thumb />
			<property name="labelID">1036</property>
			<property name="defaultID">1036</property>
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),apps)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>Log Viewer</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.logviewer%2ficon.png/</thumb>
			<property name="labelID">script.logviewer</property>
			<property name="defaultID">script.logviewer</property>
			<onclick>RunAddOn(script.logviewer)</onclick>
			<property name="path">RunAddOn(script.logviewer)</property>
			<property name="list">RunAddOn(script.logviewer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>Event log</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[130]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(SystemInfo)</onclick>
			<property name="path">ActivateWindow(SystemInfo)</property>
			<property name="list">SystemInfo</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[33060]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>Log Viewer</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.logviewer%2ficon.png/</thumb>
			<property name="labelID">script.logviewer</property>
			<property name="defaultID">script.logviewer</property>
			<onclick>RunAddOn(script.logviewer)</onclick>
			<property name="path">RunAddOn(script.logviewer)</property>
			<property name="list">RunAddOn(script.logviewer)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[13200]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(Profiles)</onclick>
			<property name="path">ActivateWindow(Profiles)</property>
			<property name="list">Profiles</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>Event log</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31159</property>
			<property name="defaultID">31159</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(Eventlog)</onclick>
			<property name="path">ActivateWindow(Eventlog)</property>
			<property name="list">Eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-33060">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>System.CanPowerDown</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>System.CanReboot</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Force Close</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.close.kodi%2fresources%2fart%2fforce.png/</thumb>
			<property name="labelID">forceclose</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>System.CanSuspend</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>System.CanHibernate</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-33060">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>Force Close</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fplugin.close.kodi%2fresources%2fart%2fforce.png/</thumb>
			<property name="labelID">forceclose</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=",return)</property>
			<property name="list">plugin://plugin.close.kodi/?url=fclose&amp;mode=10&amp;name=Close+System+%28Recommended%29&amp;iconimage=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Fresources%2Fart%2Fforce.png&amp;fanart=%2Fstorage%2Femulated%2F0%2FAndroid%2Fdata%2Forg.xbmc.psmc%2Ffiles%2F.kodi%2Faddons%2Fplugin.close.kodi%2Ffanart.jpg&amp;description=</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13009]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),num-33060)</visible>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">33060</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[2]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">2</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>shortcuts/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(1107,return)</onclick>
			<property name="path">ActivateWindow(1107,return)</property>
			<property name="list">1107</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>Library.HasContent(Music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-music">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[2]</label>
			<label2>Music</label2>
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMusicBackground)]</thumb>
			<property name="labelID">music</property>
			<property name="defaultID">2</property>
			<onclick>ActivateWindow(10502,return)</onclick>
			<property name="path">ActivateWindow(10502,return)</property>
			<property name="list">10502</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>shortcuts/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<onclick>ActivateWindow(1107,return)</onclick>
			<property name="path">ActivateWindow(1107,return)</property>
			<property name="list">1107</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[19021]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/radio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(radiochannels,return)</onclick>
			<property name="path">ActivateWindow(radiochannels,return)</property>
			<property name="list">radiochannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[517]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">517</property>
			<property name="defaultID">517</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyplayedalbums/,return)</property>
			<property name="list">musicdb://recentlyplayedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[359]</label>
			<label2>Music</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">359</property>
			<property name="defaultID">359</property>
			<visible>[Library.HasContent(Music)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</onclick>
			<property name="path">ActivateWindow(10502,musicdb://recentlyaddedalbums/,return)</property>
			<property name="list">musicdb://recentlyaddedalbums/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Music videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground)]</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[744]</label>
			<label2>item</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<property name="translatedPath">ActivateWindow(music,sources://music/,return)</property>
			<onclick>ActivateWindow(music,sources://music/,return)</onclick>
			<property name="path">ActivateWindow(music,sources://music/,return)</property>
			<property name="list">sources://music/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-musicvideos">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/artists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/artists/,return)</property>
			<property name="list">videodb://musicvideos/artists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/genres,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/genres,return)</property>
			<property name="list">videodb://musicvideos/genres</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</property>
			<property name="list">videodb://recentlyaddedmusicvideos/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/years/,return)</property>
			<property name="list">videodb://musicvideos/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>Library.HasContent(MusicVideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/tags/,return)</property>
			<property name="list">videodb://musicvideos/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-musicvideos">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/artists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/artists/,return)</property>
			<property name="list">videodb://musicvideos/artists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/genres,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/genres,return)</property>
			<property name="list">videodb://musicvideos/genres</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">8</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmusicvideos/,return)</property>
			<property name="list">videodb://recentlyaddedmusicvideos/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/years/,return)</property>
			<property name="list">videodb://musicvideos/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Window(10000).Property(submenuVisibility),musicvideos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/tags/,return)</property>
			<property name="list">videodb://musicvideos/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">musicvideos</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-smarthome">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>Hubitat</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-hubitat.png</thumb>
			<property name="labelID">hubitat</property>
			<property name="defaultID">hubitat</property>
			<onclick>StartAndroidActivity("com.hubitat.app")</onclick>
			<property name="path">StartAndroidActivity("com.hubitat.app")</property>
			<property name="list">StartAndroidActivity(com.hubitat.app)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Yatse</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/org.leetzone.android.yatsewidgetfree.png</thumb>
			<property name="labelID">yatse</property>
			<property name="defaultID">yatse</property>
			<onclick>StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</onclick>
			<property name="path">StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</property>
			<property name="list">StartAndroidActivity(org.leetzone.android.yatsewidgetfree)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>ihc</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/cn.com.broadlink.econtrol.plus.png</thumb>
			<property name="labelID">ihc</property>
			<property name="defaultID">ihc</property>
			<onclick>StartAndroidActivity("cn.com.broadlink.econtrol.plus")</onclick>
			<property name="path">StartAndroidActivity("cn.com.broadlink.econtrol.plus")</property>
			<property name="list">StartAndroidActivity(cn.com.broadlink.econtrol.plus)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>WeBack</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.yugong.Backome.png</thumb>
			<property name="labelID">weback</property>
			<property name="defaultID">weback</property>
			<onclick>StartAndroidActivity("com.yugong.Backome")</onclick>
			<property name="path">StartAndroidActivity("com.yugong.Backome")</property>
			<property name="list">StartAndroidActivity(com.yugong.Backome)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>eWeLink</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.coolkit.png</thumb>
			<property name="labelID">ewelink</property>
			<property name="defaultID">ewelink</property>
			<onclick>StartAndroidActivity("com.coolkit")</onclick>
			<property name="path">StartAndroidActivity("com.coolkit")</property>
			<property name="list">StartAndroidActivity(com.coolkit)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-smarthome">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>Hubitat</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>special://profile/addon_data/script.skinshortcuts/skin.psmc.max-thumb-hubitat.png</thumb>
			<property name="labelID">hubitat</property>
			<property name="defaultID">hubitat</property>
			<onclick>StartAndroidActivity("com.hubitat.app")</onclick>
			<property name="path">StartAndroidActivity("com.hubitat.app")</property>
			<property name="list">StartAndroidActivity(com.hubitat.app)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>Yatse</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/org.leetzone.android.yatsewidgetfree.png</thumb>
			<property name="labelID">yatse</property>
			<property name="defaultID">yatse</property>
			<onclick>StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</onclick>
			<property name="path">StartAndroidActivity("org.leetzone.android.yatsewidgetfree")</property>
			<property name="list">StartAndroidActivity(org.leetzone.android.yatsewidgetfree)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>ihc</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/cn.com.broadlink.econtrol.plus.png</thumb>
			<property name="labelID">ihc</property>
			<property name="defaultID">ihc</property>
			<onclick>StartAndroidActivity("cn.com.broadlink.econtrol.plus")</onclick>
			<property name="path">StartAndroidActivity("cn.com.broadlink.econtrol.plus")</property>
			<property name="list">StartAndroidActivity(cn.com.broadlink.econtrol.plus)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>WeBack</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.yugong.Backome.png</thumb>
			<property name="labelID">weback</property>
			<property name="defaultID">weback</property>
			<onclick>StartAndroidActivity("com.yugong.Backome")</onclick>
			<property name="path">StartAndroidActivity("com.yugong.Backome")</property>
			<property name="list">StartAndroidActivity(com.yugong.Backome)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">9</property>
			<label>eWeLink</label>
			<label2>Favourite</label2>
			<icon>DefaultFolder.png</icon>
			<thumb>androidapp://sources/apps/com.coolkit.png</thumb>
			<property name="labelID">ewelink</property>
			<property name="defaultID">ewelink</property>
			<onclick>StartAndroidActivity("com.coolkit")</onclick>
			<property name="path">StartAndroidActivity("com.coolkit")</property>
			<property name="list">StartAndroidActivity(com.coolkit)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),smarthome)</visible>
			<property name="group">smarthome</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-gaming">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-gaming">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-homemovies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>Home Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">homemovies</property>
			<property name="defaultID">homemovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Home Movies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Holiday Home Videos</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">holidayhomevideos</property>
			<property name="defaultID">holidayhomevideos</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Holiday Home Videos.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-homemovies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>Home Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">homemovies</property>
			<property name="defaultID">homemovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Home Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Home Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>Holiday Home Videos</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">holidayhomevideos</property>
			<property name="defaultID">holidayhomevideos</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Holiday Home Videos.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Holiday Home Videos.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),homemovies)</visible>
			<property name="group">homemovies</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-photos">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-photos">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-holidays">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingmovies</property>
			<property name="defaultID">thanksgivingmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving Movies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Christmas Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">christmasmovies</property>
			<property name="defaultID">christmasmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Christmas.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving TV</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingtv</property>
			<property name="defaultID">thanksgivingtv</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving TV.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Random Holiday Music</label>
			<label2>Music Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomholidaymusic</property>
			<property name="defaultID">randomholidaymusic</property>
			<onclick>PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-holidays">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingmovies</property>
			<property name="defaultID">thanksgivingmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>Christmas Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">christmasmovies</property>
			<property name="defaultID">christmasmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Christmas.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Christmas.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>Thanksgiving TV</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">thanksgivingtv</property>
			<property name="defaultID">thanksgivingtv</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Thanksgiving TV.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Thanksgiving TV.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>Random Holiday Music</label>
			<label2>Music Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">randomholidaymusic</property>
			<property name="defaultID">randomholidaymusic</property>
			<onclick>PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</onclick>
			<property name="path">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<property name="list">PlayMedia(special://profile/playlists/music/Random Holiday Music.xsp)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),holidays)</visible>
			<property name="group">holidays</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-31958">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[31485]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31485</property>
			<property name="defaultID">31485</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[600]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">600</property>
			<property name="defaultID">600</property>
			<visible>System.HasMediaAudioCD</visible>
			<onclick>RipCD</onclick>
			<property name="path">RipCD</property>
			<property name="list">RipCD</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-31958">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[31485]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31485</property>
			<property name="defaultID">31485</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31958)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[600]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">600</property>
			<property name="defaultID">600</property>
			<visible>[System.HasMediaAudioCD] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31958)</visible>
			<onclick>RipCD</onclick>
			<property name="path">RipCD</property>
			<property name="list">RipCD</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31958</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-sports-ppvs">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">wweppvs</property>
			<property name="defaultID">wweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/WWE PPVs.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedwweppvs</property>
			<property name="defaultID">unwatchedwweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched WWE PPVs.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedufcppvs</property>
			<property name="defaultID">unwatchedufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched UFC PPVS.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">ufcppvs</property>
			<property name="defaultID">ufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/UFP PPVS.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-sports-ppvs">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">15</property>
			<label>WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">wweppvs</property>
			<property name="defaultID">wweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/WWE PPVs.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched WWE PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedwweppvs</property>
			<property name="defaultID">unwatchedwweppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched WWE PPVs.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched WWE PPVs.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">15</property>
			<label>Unwatched UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedufcppvs</property>
			<property name="defaultID">unwatchedufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched UFC PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched UFC PPVS.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">15</property>
			<label>UFC PPVs</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">ufcppvs</property>
			<property name="defaultID">ufcppvs</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/UFP PPVS.xsp,return)</property>
			<property name="list">special://profile/playlists/video/UFP PPVS.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">15</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),sports-ppvs)</visible>
			<property name="group">sports-ppvs</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-on-stage">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>Stand-Up Comedy</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">stand-upcomedy</property>
			<property name="defaultID">stand-upcomedy</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Stand-Up Comedy.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>Music Concerts</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicconcerts</property>
			<property name="defaultID">musicconcerts</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Music Concerts.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>Plays</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">plays</property>
			<property name="defaultID">plays</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Plays.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>Musicals</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicals</property>
			<property name="defaultID">musicals</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Musicals.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-on-stage">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">16</property>
			<label>Stand-Up Comedy</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">stand-upcomedy</property>
			<property name="defaultID">stand-upcomedy</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Stand-Up Comedy.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Stand-Up Comedy.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">16</property>
			<label>Music Concerts</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicconcerts</property>
			<property name="defaultID">musicconcerts</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Music Concerts.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Music Concerts.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">16</property>
			<label>Plays</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">plays</property>
			<property name="defaultID">plays</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Plays.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Plays.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">16</property>
			<label>Musicals</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">musicals</property>
			<property name="defaultID">musicals</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Musicals.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Musicals.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">16</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>special://skin/extras/icons/DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),on-stage)</visible>
			<property name="group">on-stage</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-20342">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">17</property>
			<label>Unwatched Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedmovies</property>
			<property name="defaultID">unwatchedmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched Movies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">17</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>Library.HasContent(MovieSets)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">17</property>
			<label>[B][COLOR blue]• [/COLOR][/B][COLOR ghostwhite]Search for Movie[/COLOR][B][COLOR blue] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch.png/</thumb>
			<property name="labelID">b-colorblue-color-b-colorghostwhite-searchformovie-color-b-colorblue-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=movieSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">17</property>
			<label>In Progress Movies</label>
			<label2>Skin Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">inprogressmovies</property>
			<property name="defaultID">inprogressmovies</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-20342">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">17</property>
			<label>Unwatched Movies</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">unwatchedmovies</property>
			<property name="defaultID">unwatchedmovies</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/Unwatched Movies.xsp,return)</property>
			<property name="list">special://profile/playlists/video/Unwatched Movies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">17</property>
			<label>Recently Added</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">31328</property>
			<property name="defaultID">31328</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[1214]</label>
			<label2>Videos</label2>
			<icon>special://skin/extras/icons/DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">1214</property>
			<property name="defaultID">1214</property>
			<onclick>ActivateWindow(Videos,library://video/,return)</onclick>
			<property name="path">ActivateWindow(Videos,library://video/,return)</property>
			<property name="list">library://video/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20434]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">20434</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">17</property>
			<label>[B][COLOR blue]• [/COLOR][/B][COLOR ghostwhite]Search for Movie[/COLOR][B][COLOR blue] •[/COLOR][/B]</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fstorage%2femulated%2f0%2fAndroid%2fdata%2forg.xbmc.psmc%2ffiles%2f.kodi%2faddons%2fscript.fuzzybritches_v3.artwork%2fresources%2fmedia%2ffuzzybritches%2fsearch.png/</thumb>
			<property name="labelID">b-colorblue-color-b-colorghostwhite-searchformovie-color-b-colorblue-color-b</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.fuzzybritches_v3/?action=movieSearch",return)</property>
			<property name="list">plugin://plugin.video.fuzzybritches_v3/?action=movieSearch</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">17</property>
			<label>In Progress Movies</label>
			<label2>Skin Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">inprogressmovies</property>
			<property name="defaultID">inprogressmovies</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/InProgressMovies.xsp,return)</property>
			<property name="list">special://skin/extras/InProgressMovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[135]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[652]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/years/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/years/,return)</property>
			<property name="list">videodb://movies/years/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[344]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/actors/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/actors/,return)</property>
			<property name="list">videodb://movies/actors/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[20459]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20459</property>
			<property name="defaultID">20459</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/tags/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/tags/,return)</property>
			<property name="list">videodb://movies/tags/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">17</property>
			<label>$LOCALIZE[136]</label>
			<label2>Playlists</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-20342)</visible>
			<property name="group">20342</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">18</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
		</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="poster" />
			<param name="widgetStyle3" value="poster" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="Unwatched (TV Shows)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="Unwatched (TV Shows)" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (TV Shows).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-tvshows,0) | String.IsEmpty(Skin.String(widgetvalue-tvshows))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="ascending" />
			<param name="widgetLimit" value="$NUMBER[100]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="TV Shows (Classics)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="TV Shows (Classics)" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/TV Shows (Classics).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="2" />
			<param name="submenuid" value="tvguide" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2510" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="Recently played TV channels" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2510" />
			<param name="widgetName" value="Recently played TV channels" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.skin.helper.widgets/?action=lastchannels&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-tvguide,0) | String.IsEmpty(Skin.String(widgetvalue-tvguide))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2520" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2530" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2540" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2550" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2560" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2570" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2580" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvguide" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-tvguide,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="3" />
			<param name="submenuid" value="weather" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="false + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3510" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="Weather" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="3510" />
			<param name="widgetName" value="Weather" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayEnable" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-weather,0) | String.IsEmpty(Skin.String(widgetvalue-weather))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3520" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3530" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3540" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3550" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3560" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3570" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="false + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3580" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![false + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-weather,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="settings" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="System info" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="fixedlist" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="System info" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-settings,0) | String.IsEmpty(Skin.String(widgetvalue-settings))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-settings,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="8" />
			<param name="submenuid" value="musicvideos" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8510" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="Random Music Videos" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8510" />
			<param name="widgetName" value="Random Music Videos" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://service.library.data.provider?type=randommusicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetSortBy" value="random" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-musicvideos,0) | String.IsEmpty(Skin.String(widgetvalue-musicvideos))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8520" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8530" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8540" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8550" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8560" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8570" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="8580" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="musicvideos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-musicvideos,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="11" />
			<param name="submenuid" value="homemovies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="poster" />
			<param name="widgetStyle3" value="poster" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11510" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="Unwatched (Home Movies)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11510" />
			<param name="widgetName" value="Unwatched (Home Movies)" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (Home Movies).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-homemovies,0) | String.IsEmpty(Skin.String(widgetvalue-homemovies))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11520" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="Unwatched (Home Holiday Movies)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11520" />
			<param name="widgetName" value="Unwatched (Home Holiday Movies)" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (Home Holiday Movies).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11530" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="Home Movies" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11530" />
			<param name="widgetName" value="Home Movies" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Home Movies.xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11540" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="Home Movies (Holiday)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11540" />
			<param name="widgetName" value="Home Movies (Holiday)" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Home Movies (Holiday).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11550" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11560" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11570" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="11580" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="11580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="homemovies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-homemovies,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="12" />
			<param name="submenuid" value="photos" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="square" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12510" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="Photos" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12510" />
			<param name="widgetName" value="Photos" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="pictures" />
			<param name="widgetPath" value="smb://NAS/Media/Photos/" />
			<param name="widgetStyle" value="widget_layout_square" />
			<param name="widgetSortBy" value="random" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-photos,0) | String.IsEmpty(Skin.String(widgetvalue-photos))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12520" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12530" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12540" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12550" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12560" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12570" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="12580" />
			<param name="submenuid" value="photos" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="12580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="photos" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-photos,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="15" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15510" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="Unwatched (WWE PPV's)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15510" />
			<param name="widgetName" value="Unwatched (WWE PPV's)" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (WWE PPV's).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-sports-ppvs,0) | String.IsEmpty(Skin.String(widgetvalue-sports-ppvs))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15520" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="Unwatched (UFC PPV's)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15520" />
			<param name="widgetName" value="Unwatched (UFC PPV's)" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (UFC PPV's).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15530" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="Sports PPV's (WWE All PPVs)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15530" />
			<param name="widgetName" value="Sports PPV's (WWE All PPVs)" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Sports PPV's (WWE All PPVs).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15540" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="Sports PPV's (UFC All PPVs)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15540" />
			<param name="widgetName" value="Sports PPV's (UFC All PPVs)" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Sports PPV's (UFC All PPVs).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="year" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15550" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15560" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15570" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="15580" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="15580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="sports-ppvs" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-sports-ppvs,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="16" />
			<param name="submenuid" value="on-stage" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="poster" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16510" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="Unwatched (Stand-Up Comedy)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16510" />
			<param name="widgetName" value="Unwatched (Stand-Up Comedy)" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (Stand-Up Comedy).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-on-stage,0) | String.IsEmpty(Skin.String(widgetvalue-on-stage))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16520" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="Unwatched (Music Concerts)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16520" />
			<param name="widgetName" value="Unwatched (Music Concerts)" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (Music Concerts).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16530" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="On-Stage (Stand-Up Comedy)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16530" />
			<param name="widgetName" value="On-Stage (Stand-Up Comedy)" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/On-Stage (Stand-Up Comedy).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16540" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="On-Stage (Music Concerts)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16540" />
			<param name="widgetName" value="On-Stage (Music Concerts)" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/On-Stage (Music Concerts).xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16550" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16560" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16570" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="16580" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="16580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="on-stage" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-on-stage,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="17" />
			<param name="submenuid" value="num-20342" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="poster" />
			<param name="widgetStyle2" value="poster" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17510" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="Unwatched (Movies)" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17510" />
			<param name="widgetName" value="Unwatched (Movies)" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Unwatched (Movies).xsp" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="descending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + [Skin.String(widgetvalue-num-20342,0) | String.IsEmpty(Skin.String(widgetvalue-num-20342))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17520" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17520" />
			<param name="widgetName" value="[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.fuzzybritches_v3/?action=movies&amp;url=theaters&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_poster" />
			<param name="widgetSortBy" value="dateadded" />
			<param name="widgetSortOrder" value="ascending" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17530" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17540" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17550" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17560" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17570" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="17580" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="17580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-20342" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),max) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),max)]] + Skin.String(widgetvalue-num-20342,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		</include>
	<variable name="1510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (TV Shows).xsp</value>
		</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="String.Contains(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title) + String.Contains(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Season) + !String.IsEmpty(Container(1510).ListItem.Episode) + !String.Contains(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle) + !String.IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Artist) + !String.IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		</variable>
	<variable name="1520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.fuzzybritches_v3/?action=tvshows&amp;url=premiere&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="String.Contains(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title) + String.Contains(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Season) + !String.IsEmpty(Container(1520).ListItem.Episode) + !String.Contains(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle) + !String.IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Artist) + !String.IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		</variable>
	<variable name="1530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/TV Shows (Classics).xsp</value>
		</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="String.Contains(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title) + String.Contains(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Season) + !String.IsEmpty(Container(1530).ListItem.Episode) + !String.Contains(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle) + !String.IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Artist) + !String.IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		</variable>
	<variable name="1540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.fuzzybritches_v3/?action=tvNetworks&amp;reload=$INFO[Window(Home).Property(widgetreload)]$INFO[Window(Home).Property(widgetreload2)]</value>
		</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="String.Contains(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title) + String.Contains(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Season) + !String.IsEmpty(Container(1540).ListItem.Episode) + !String.Contains(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle) + !String.IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Artist) + !String.IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		</variable>
	<variable name="1550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="String.Contains(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title) + String.Contains(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Season) + !String.IsEmpty(Container(1550).ListItem.Episode) + !String.Contains(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle) + !String.IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Artist) + !String.IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		</variable>
	<variable name="1560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="String.Contains(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title) + String.Contains(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Season) + !String.IsEmpty(Container(1560).ListItem.Episode) + !String.Contains(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle) + !String.IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Artist) + !String.IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		</variable>
	<variable name="1570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="String.Contains(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title) + String.Contains(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Season) + !String.IsEmpty(Container(1570).ListItem.Episode) + !String.Contains(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle) + !String.IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Artist) + !String.IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		</variable>
	<variable name="1580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="String.Contains(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title) + String.Contains(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Season) + !String.IsEmpty(Container(1580).ListItem.Episode) + !String.Contains(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle) + !String.IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Artist) + !String.IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-1">
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),3)">[COLOR crimson]•• [/COLOR]By Networks[COLOR crimson] ••[/COLOR]</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),2)">TV Shows (Classics)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),1)">[B][COLOR crimson]• [/COLOR][/B]New TV Shows[B][COLOR crimson] •[/COLOR][/B]</value>
		<value>Unwatched (TV Shows)</value>
		</variable>
	<variable name="2510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.skin.helper.widgets/?action=lastchannels&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
		</variable>
	<variable name="widgetinfolabel-2510">
		<value condition="String.Contains(Container(2510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2510).ListItem.label] $INFO[Container(2510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title) + String.Contains(Container(2510).ListItem.FolderPath, pvr://)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Season) + !String.IsEmpty(Container(2510).ListItem.Episode) + !String.Contains(Container(2510).ListItem.TvShowTitle,Container(2510).ListItem.Title)">[UPPERCASE]S$INFO[Container(2510).ListItem.Season]E$INFO[Container(2510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Label)">$INFO[Container(2510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2510">
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle) + !String.IsEmpty(Container(2510).ListItem.Genre)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Premiered,, • ]$INFO[Container(2510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Year)">$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Duration,,min. • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Artist) + !String.IsEmpty(Container(2510).ListItem.Album)">$INFO[Container(2510).ListItem.Artist,, • ]$INFO[Container(2510).ListItem.Album,, • ]$INFO[Container(2510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Property(StartTime))">$INFO[Container(2510).ListItem.Property(ChannelName),, • ]$INFO[Container(2510).ListItem.Property(StartTime),, - ]$INFO[Container(2510).ListItem.Property(EndTime),, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.StartTime)">$INFO[Container(2510).ListItem.ChannelName,, • ]$INFO[Container(2510).ListItem.StartTime,, - ]$INFO[Container(2510).ListItem.EndTime,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		</variable>
	<variable name="2520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2520">
		<value condition="String.Contains(Container(2520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2520).ListItem.label] $INFO[Container(2520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title) + String.Contains(Container(2520).ListItem.FolderPath, pvr://)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Season) + !String.IsEmpty(Container(2520).ListItem.Episode) + !String.Contains(Container(2520).ListItem.TvShowTitle,Container(2520).ListItem.Title)">[UPPERCASE]S$INFO[Container(2520).ListItem.Season]E$INFO[Container(2520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Label)">$INFO[Container(2520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2520">
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle) + !String.IsEmpty(Container(2520).ListItem.Genre)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Premiered,, • ]$INFO[Container(2520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Year)">$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Duration,,min. • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Artist) + !String.IsEmpty(Container(2520).ListItem.Album)">$INFO[Container(2520).ListItem.Artist,, • ]$INFO[Container(2520).ListItem.Album,, • ]$INFO[Container(2520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Property(StartTime))">$INFO[Container(2520).ListItem.Property(ChannelName),, • ]$INFO[Container(2520).ListItem.Property(StartTime),, - ]$INFO[Container(2520).ListItem.Property(EndTime),, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.StartTime)">$INFO[Container(2520).ListItem.ChannelName,, • ]$INFO[Container(2520).ListItem.StartTime,, - ]$INFO[Container(2520).ListItem.EndTime,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		</variable>
	<variable name="2530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2530">
		<value condition="String.Contains(Container(2530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2530).ListItem.label] $INFO[Container(2530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title) + String.Contains(Container(2530).ListItem.FolderPath, pvr://)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Season) + !String.IsEmpty(Container(2530).ListItem.Episode) + !String.Contains(Container(2530).ListItem.TvShowTitle,Container(2530).ListItem.Title)">[UPPERCASE]S$INFO[Container(2530).ListItem.Season]E$INFO[Container(2530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Label)">$INFO[Container(2530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2530">
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle) + !String.IsEmpty(Container(2530).ListItem.Genre)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Premiered,, • ]$INFO[Container(2530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Year)">$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Duration,,min. • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Artist) + !String.IsEmpty(Container(2530).ListItem.Album)">$INFO[Container(2530).ListItem.Artist,, • ]$INFO[Container(2530).ListItem.Album,, • ]$INFO[Container(2530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Property(StartTime))">$INFO[Container(2530).ListItem.Property(ChannelName),, • ]$INFO[Container(2530).ListItem.Property(StartTime),, - ]$INFO[Container(2530).ListItem.Property(EndTime),, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.StartTime)">$INFO[Container(2530).ListItem.ChannelName,, • ]$INFO[Container(2530).ListItem.StartTime,, - ]$INFO[Container(2530).ListItem.EndTime,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		</variable>
	<variable name="2540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2540">
		<value condition="String.Contains(Container(2540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2540).ListItem.label] $INFO[Container(2540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title) + String.Contains(Container(2540).ListItem.FolderPath, pvr://)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Season) + !String.IsEmpty(Container(2540).ListItem.Episode) + !String.Contains(Container(2540).ListItem.TvShowTitle,Container(2540).ListItem.Title)">[UPPERCASE]S$INFO[Container(2540).ListItem.Season]E$INFO[Container(2540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Label)">$INFO[Container(2540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2540">
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle) + !String.IsEmpty(Container(2540).ListItem.Genre)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Premiered,, • ]$INFO[Container(2540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Year)">$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Duration,,min. • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Artist) + !String.IsEmpty(Container(2540).ListItem.Album)">$INFO[Container(2540).ListItem.Artist,, • ]$INFO[Container(2540).ListItem.Album,, • ]$INFO[Container(2540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Property(StartTime))">$INFO[Container(2540).ListItem.Property(ChannelName),, • ]$INFO[Container(2540).ListItem.Property(StartTime),, - ]$INFO[Container(2540).ListItem.Property(EndTime),, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.StartTime)">$INFO[Container(2540).ListItem.ChannelName,, • ]$INFO[Container(2540).ListItem.StartTime,, - ]$INFO[Container(2540).ListItem.EndTime,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		</variable>
	<variable name="2550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2550">
		<value condition="String.Contains(Container(2550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2550).ListItem.label] $INFO[Container(2550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title) + String.Contains(Container(2550).ListItem.FolderPath, pvr://)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Season) + !String.IsEmpty(Container(2550).ListItem.Episode) + !String.Contains(Container(2550).ListItem.TvShowTitle,Container(2550).ListItem.Title)">[UPPERCASE]S$INFO[Container(2550).ListItem.Season]E$INFO[Container(2550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Label)">$INFO[Container(2550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2550">
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle) + !String.IsEmpty(Container(2550).ListItem.Genre)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Premiered,, • ]$INFO[Container(2550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Year)">$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Duration,,min. • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Artist) + !String.IsEmpty(Container(2550).ListItem.Album)">$INFO[Container(2550).ListItem.Artist,, • ]$INFO[Container(2550).ListItem.Album,, • ]$INFO[Container(2550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Property(StartTime))">$INFO[Container(2550).ListItem.Property(ChannelName),, • ]$INFO[Container(2550).ListItem.Property(StartTime),, - ]$INFO[Container(2550).ListItem.Property(EndTime),, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.StartTime)">$INFO[Container(2550).ListItem.ChannelName,, • ]$INFO[Container(2550).ListItem.StartTime,, - ]$INFO[Container(2550).ListItem.EndTime,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		</variable>
	<variable name="2560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2560">
		<value condition="String.Contains(Container(2560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2560).ListItem.label] $INFO[Container(2560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title) + String.Contains(Container(2560).ListItem.FolderPath, pvr://)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Season) + !String.IsEmpty(Container(2560).ListItem.Episode) + !String.Contains(Container(2560).ListItem.TvShowTitle,Container(2560).ListItem.Title)">[UPPERCASE]S$INFO[Container(2560).ListItem.Season]E$INFO[Container(2560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Label)">$INFO[Container(2560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2560">
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle) + !String.IsEmpty(Container(2560).ListItem.Genre)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Premiered,, • ]$INFO[Container(2560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Year)">$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Duration,,min. • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Artist) + !String.IsEmpty(Container(2560).ListItem.Album)">$INFO[Container(2560).ListItem.Artist,, • ]$INFO[Container(2560).ListItem.Album,, • ]$INFO[Container(2560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Property(StartTime))">$INFO[Container(2560).ListItem.Property(ChannelName),, • ]$INFO[Container(2560).ListItem.Property(StartTime),, - ]$INFO[Container(2560).ListItem.Property(EndTime),, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.StartTime)">$INFO[Container(2560).ListItem.ChannelName,, • ]$INFO[Container(2560).ListItem.StartTime,, - ]$INFO[Container(2560).ListItem.EndTime,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		</variable>
	<variable name="2570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2570">
		<value condition="String.Contains(Container(2570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2570).ListItem.label] $INFO[Container(2570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title) + String.Contains(Container(2570).ListItem.FolderPath, pvr://)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Season) + !String.IsEmpty(Container(2570).ListItem.Episode) + !String.Contains(Container(2570).ListItem.TvShowTitle,Container(2570).ListItem.Title)">[UPPERCASE]S$INFO[Container(2570).ListItem.Season]E$INFO[Container(2570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Label)">$INFO[Container(2570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2570">
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle) + !String.IsEmpty(Container(2570).ListItem.Genre)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Premiered,, • ]$INFO[Container(2570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Year)">$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Duration,,min. • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Artist) + !String.IsEmpty(Container(2570).ListItem.Album)">$INFO[Container(2570).ListItem.Artist,, • ]$INFO[Container(2570).ListItem.Album,, • ]$INFO[Container(2570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Property(StartTime))">$INFO[Container(2570).ListItem.Property(ChannelName),, • ]$INFO[Container(2570).ListItem.Property(StartTime),, - ]$INFO[Container(2570).ListItem.Property(EndTime),, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.StartTime)">$INFO[Container(2570).ListItem.ChannelName,, • ]$INFO[Container(2570).ListItem.StartTime,, - ]$INFO[Container(2570).ListItem.EndTime,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		</variable>
	<variable name="2580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2580">
		<value condition="String.Contains(Container(2580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2580).ListItem.label] $INFO[Container(2580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title) + String.Contains(Container(2580).ListItem.FolderPath, pvr://)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Season) + !String.IsEmpty(Container(2580).ListItem.Episode) + !String.Contains(Container(2580).ListItem.TvShowTitle,Container(2580).ListItem.Title)">[UPPERCASE]S$INFO[Container(2580).ListItem.Season]E$INFO[Container(2580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Label)">$INFO[Container(2580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2580">
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle) + !String.IsEmpty(Container(2580).ListItem.Genre)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Premiered,, • ]$INFO[Container(2580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Year)">$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Duration,,min. • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Artist) + !String.IsEmpty(Container(2580).ListItem.Album)">$INFO[Container(2580).ListItem.Artist,, • ]$INFO[Container(2580).ListItem.Album,, • ]$INFO[Container(2580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Property(StartTime))">$INFO[Container(2580).ListItem.Property(ChannelName),, • ]$INFO[Container(2580).ListItem.Property(StartTime),, - ]$INFO[Container(2580).ListItem.Property(EndTime),, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.StartTime)">$INFO[Container(2580).ListItem.ChannelName,, • ]$INFO[Container(2580).ListItem.StartTime,, - ]$INFO[Container(2580).ListItem.EndTime,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-2">
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvguide),1)" />
		<value>Recently played TV channels</value>
		</variable>
	<variable name="3510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3510">
		<value condition="String.Contains(Container(3510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3510).ListItem.label] $INFO[Container(3510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title) + String.Contains(Container(3510).ListItem.FolderPath, pvr://)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Season) + !String.IsEmpty(Container(3510).ListItem.Episode) + !String.Contains(Container(3510).ListItem.TvShowTitle,Container(3510).ListItem.Title)">[UPPERCASE]S$INFO[Container(3510).ListItem.Season]E$INFO[Container(3510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Label)">$INFO[Container(3510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3510">
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle) + !String.IsEmpty(Container(3510).ListItem.Genre)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Premiered,, • ]$INFO[Container(3510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Year)">$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Duration,,min. • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Artist) + !String.IsEmpty(Container(3510).ListItem.Album)">$INFO[Container(3510).ListItem.Artist,, • ]$INFO[Container(3510).ListItem.Album,, • ]$INFO[Container(3510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Property(StartTime))">$INFO[Container(3510).ListItem.Property(ChannelName),, • ]$INFO[Container(3510).ListItem.Property(StartTime),, - ]$INFO[Container(3510).ListItem.Property(EndTime),, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.StartTime)">$INFO[Container(3510).ListItem.ChannelName,, • ]$INFO[Container(3510).ListItem.StartTime,, - ]$INFO[Container(3510).ListItem.EndTime,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		</variable>
	<variable name="3520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3520">
		<value condition="String.Contains(Container(3520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3520).ListItem.label] $INFO[Container(3520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title) + String.Contains(Container(3520).ListItem.FolderPath, pvr://)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Season) + !String.IsEmpty(Container(3520).ListItem.Episode) + !String.Contains(Container(3520).ListItem.TvShowTitle,Container(3520).ListItem.Title)">[UPPERCASE]S$INFO[Container(3520).ListItem.Season]E$INFO[Container(3520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Label)">$INFO[Container(3520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3520">
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle) + !String.IsEmpty(Container(3520).ListItem.Genre)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Premiered,, • ]$INFO[Container(3520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Year)">$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Duration,,min. • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Artist) + !String.IsEmpty(Container(3520).ListItem.Album)">$INFO[Container(3520).ListItem.Artist,, • ]$INFO[Container(3520).ListItem.Album,, • ]$INFO[Container(3520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Property(StartTime))">$INFO[Container(3520).ListItem.Property(ChannelName),, • ]$INFO[Container(3520).ListItem.Property(StartTime),, - ]$INFO[Container(3520).ListItem.Property(EndTime),, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.StartTime)">$INFO[Container(3520).ListItem.ChannelName,, • ]$INFO[Container(3520).ListItem.StartTime,, - ]$INFO[Container(3520).ListItem.EndTime,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		</variable>
	<variable name="3530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3530">
		<value condition="String.Contains(Container(3530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3530).ListItem.label] $INFO[Container(3530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title) + String.Contains(Container(3530).ListItem.FolderPath, pvr://)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Season) + !String.IsEmpty(Container(3530).ListItem.Episode) + !String.Contains(Container(3530).ListItem.TvShowTitle,Container(3530).ListItem.Title)">[UPPERCASE]S$INFO[Container(3530).ListItem.Season]E$INFO[Container(3530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Label)">$INFO[Container(3530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3530">
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle) + !String.IsEmpty(Container(3530).ListItem.Genre)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Premiered,, • ]$INFO[Container(3530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Year)">$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Duration,,min. • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Artist) + !String.IsEmpty(Container(3530).ListItem.Album)">$INFO[Container(3530).ListItem.Artist,, • ]$INFO[Container(3530).ListItem.Album,, • ]$INFO[Container(3530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Property(StartTime))">$INFO[Container(3530).ListItem.Property(ChannelName),, • ]$INFO[Container(3530).ListItem.Property(StartTime),, - ]$INFO[Container(3530).ListItem.Property(EndTime),, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.StartTime)">$INFO[Container(3530).ListItem.ChannelName,, • ]$INFO[Container(3530).ListItem.StartTime,, - ]$INFO[Container(3530).ListItem.EndTime,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		</variable>
	<variable name="3540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3540">
		<value condition="String.Contains(Container(3540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3540).ListItem.label] $INFO[Container(3540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title) + String.Contains(Container(3540).ListItem.FolderPath, pvr://)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Season) + !String.IsEmpty(Container(3540).ListItem.Episode) + !String.Contains(Container(3540).ListItem.TvShowTitle,Container(3540).ListItem.Title)">[UPPERCASE]S$INFO[Container(3540).ListItem.Season]E$INFO[Container(3540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Label)">$INFO[Container(3540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3540">
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle) + !String.IsEmpty(Container(3540).ListItem.Genre)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Premiered,, • ]$INFO[Container(3540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Year)">$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Duration,,min. • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Artist) + !String.IsEmpty(Container(3540).ListItem.Album)">$INFO[Container(3540).ListItem.Artist,, • ]$INFO[Container(3540).ListItem.Album,, • ]$INFO[Container(3540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Property(StartTime))">$INFO[Container(3540).ListItem.Property(ChannelName),, • ]$INFO[Container(3540).ListItem.Property(StartTime),, - ]$INFO[Container(3540).ListItem.Property(EndTime),, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.StartTime)">$INFO[Container(3540).ListItem.ChannelName,, • ]$INFO[Container(3540).ListItem.StartTime,, - ]$INFO[Container(3540).ListItem.EndTime,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		</variable>
	<variable name="3550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3550">
		<value condition="String.Contains(Container(3550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3550).ListItem.label] $INFO[Container(3550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title) + String.Contains(Container(3550).ListItem.FolderPath, pvr://)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Season) + !String.IsEmpty(Container(3550).ListItem.Episode) + !String.Contains(Container(3550).ListItem.TvShowTitle,Container(3550).ListItem.Title)">[UPPERCASE]S$INFO[Container(3550).ListItem.Season]E$INFO[Container(3550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Label)">$INFO[Container(3550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3550">
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle) + !String.IsEmpty(Container(3550).ListItem.Genre)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Premiered,, • ]$INFO[Container(3550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Year)">$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Duration,,min. • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Artist) + !String.IsEmpty(Container(3550).ListItem.Album)">$INFO[Container(3550).ListItem.Artist,, • ]$INFO[Container(3550).ListItem.Album,, • ]$INFO[Container(3550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Property(StartTime))">$INFO[Container(3550).ListItem.Property(ChannelName),, • ]$INFO[Container(3550).ListItem.Property(StartTime),, - ]$INFO[Container(3550).ListItem.Property(EndTime),, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.StartTime)">$INFO[Container(3550).ListItem.ChannelName,, • ]$INFO[Container(3550).ListItem.StartTime,, - ]$INFO[Container(3550).ListItem.EndTime,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		</variable>
	<variable name="3560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3560">
		<value condition="String.Contains(Container(3560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3560).ListItem.label] $INFO[Container(3560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title) + String.Contains(Container(3560).ListItem.FolderPath, pvr://)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Season) + !String.IsEmpty(Container(3560).ListItem.Episode) + !String.Contains(Container(3560).ListItem.TvShowTitle,Container(3560).ListItem.Title)">[UPPERCASE]S$INFO[Container(3560).ListItem.Season]E$INFO[Container(3560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Label)">$INFO[Container(3560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3560">
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle) + !String.IsEmpty(Container(3560).ListItem.Genre)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Premiered,, • ]$INFO[Container(3560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Year)">$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Duration,,min. • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Artist) + !String.IsEmpty(Container(3560).ListItem.Album)">$INFO[Container(3560).ListItem.Artist,, • ]$INFO[Container(3560).ListItem.Album,, • ]$INFO[Container(3560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Property(StartTime))">$INFO[Container(3560).ListItem.Property(ChannelName),, • ]$INFO[Container(3560).ListItem.Property(StartTime),, - ]$INFO[Container(3560).ListItem.Property(EndTime),, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.StartTime)">$INFO[Container(3560).ListItem.ChannelName,, • ]$INFO[Container(3560).ListItem.StartTime,, - ]$INFO[Container(3560).ListItem.EndTime,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		</variable>
	<variable name="3570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3570">
		<value condition="String.Contains(Container(3570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3570).ListItem.label] $INFO[Container(3570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title) + String.Contains(Container(3570).ListItem.FolderPath, pvr://)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Season) + !String.IsEmpty(Container(3570).ListItem.Episode) + !String.Contains(Container(3570).ListItem.TvShowTitle,Container(3570).ListItem.Title)">[UPPERCASE]S$INFO[Container(3570).ListItem.Season]E$INFO[Container(3570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Label)">$INFO[Container(3570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3570">
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle) + !String.IsEmpty(Container(3570).ListItem.Genre)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Premiered,, • ]$INFO[Container(3570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Year)">$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Duration,,min. • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Artist) + !String.IsEmpty(Container(3570).ListItem.Album)">$INFO[Container(3570).ListItem.Artist,, • ]$INFO[Container(3570).ListItem.Album,, • ]$INFO[Container(3570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Property(StartTime))">$INFO[Container(3570).ListItem.Property(ChannelName),, • ]$INFO[Container(3570).ListItem.Property(StartTime),, - ]$INFO[Container(3570).ListItem.Property(EndTime),, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.StartTime)">$INFO[Container(3570).ListItem.ChannelName,, • ]$INFO[Container(3570).ListItem.StartTime,, - ]$INFO[Container(3570).ListItem.EndTime,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		</variable>
	<variable name="3580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3580">
		<value condition="String.Contains(Container(3580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3580).ListItem.label] $INFO[Container(3580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title) + String.Contains(Container(3580).ListItem.FolderPath, pvr://)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Season) + !String.IsEmpty(Container(3580).ListItem.Episode) + !String.Contains(Container(3580).ListItem.TvShowTitle,Container(3580).ListItem.Title)">[UPPERCASE]S$INFO[Container(3580).ListItem.Season]E$INFO[Container(3580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Label)">$INFO[Container(3580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3580">
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle) + !String.IsEmpty(Container(3580).ListItem.Genre)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Premiered,, • ]$INFO[Container(3580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Year)">$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Duration,,min. • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Artist) + !String.IsEmpty(Container(3580).ListItem.Album)">$INFO[Container(3580).ListItem.Artist,, • ]$INFO[Container(3580).ListItem.Album,, • ]$INFO[Container(3580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Property(StartTime))">$INFO[Container(3580).ListItem.Property(ChannelName),, • ]$INFO[Container(3580).ListItem.Property(StartTime),, - ]$INFO[Container(3580).ListItem.Property(EndTime),, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.StartTime)">$INFO[Container(3580).ListItem.ChannelName,, • ]$INFO[Container(3580).ListItem.StartTime,, - ]$INFO[Container(3580).ListItem.EndTime,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-3">
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-weather),1)" />
		<value>Weather</value>
		</variable>
	<variable name="5510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="String.Contains(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title) + String.Contains(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Season) + !String.IsEmpty(Container(5510).ListItem.Episode) + !String.Contains(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle) + !String.IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Artist) + !String.IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		</variable>
	<variable name="5520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="String.Contains(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title) + String.Contains(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Season) + !String.IsEmpty(Container(5520).ListItem.Episode) + !String.Contains(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle) + !String.IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Artist) + !String.IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		</variable>
	<variable name="5530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="String.Contains(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title) + String.Contains(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Season) + !String.IsEmpty(Container(5530).ListItem.Episode) + !String.Contains(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle) + !String.IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Artist) + !String.IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		</variable>
	<variable name="5540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="String.Contains(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title) + String.Contains(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Season) + !String.IsEmpty(Container(5540).ListItem.Episode) + !String.Contains(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle) + !String.IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Artist) + !String.IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		</variable>
	<variable name="5550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="String.Contains(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title) + String.Contains(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Season) + !String.IsEmpty(Container(5550).ListItem.Episode) + !String.Contains(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle) + !String.IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Artist) + !String.IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		</variable>
	<variable name="5560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="String.Contains(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title) + String.Contains(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Season) + !String.IsEmpty(Container(5560).ListItem.Episode) + !String.Contains(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle) + !String.IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Artist) + !String.IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		</variable>
	<variable name="5570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="String.Contains(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title) + String.Contains(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Season) + !String.IsEmpty(Container(5570).ListItem.Episode) + !String.Contains(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle) + !String.IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Artist) + !String.IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		</variable>
	<variable name="5580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="String.Contains(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title) + String.Contains(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Season) + !String.IsEmpty(Container(5580).ListItem.Episode) + !String.Contains(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle) + !String.IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Artist) + !String.IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-5">
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-settings),1)" />
		<value>System info</value>
		</variable>
	<variable name="8510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://service.library.data.provider?type=randommusicvideos&amp;reload=$INFO[Window(Home).Property(widgetreload-musicvideos)]</value>
		</variable>
	<variable name="widgetinfolabel-8510">
		<value condition="String.Contains(Container(8510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8510).ListItem.label] $INFO[Container(8510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title) + String.Contains(Container(8510).ListItem.FolderPath, pvr://)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Season) + !String.IsEmpty(Container(8510).ListItem.Episode) + !String.Contains(Container(8510).ListItem.TvShowTitle,Container(8510).ListItem.Title)">[UPPERCASE]S$INFO[Container(8510).ListItem.Season]E$INFO[Container(8510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Title)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Label)">$INFO[Container(8510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8510">
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle) + !String.IsEmpty(Container(8510).ListItem.Genre)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.TvShowTitle)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Premiered,, • ]$INFO[Container(8510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Year)">$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Duration,,min. • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Artist) + !String.IsEmpty(Container(8510).ListItem.Album)">$INFO[Container(8510).ListItem.Artist,, • ]$INFO[Container(8510).ListItem.Album,, • ]$INFO[Container(8510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.Property(StartTime))">$INFO[Container(8510).ListItem.Property(ChannelName),, • ]$INFO[Container(8510).ListItem.Property(StartTime),, - ]$INFO[Container(8510).ListItem.Property(EndTime),, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8510).ListItem.StartTime)">$INFO[Container(8510).ListItem.ChannelName,, • ]$INFO[Container(8510).ListItem.StartTime,, - ]$INFO[Container(8510).ListItem.EndTime,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		</variable>
	<variable name="8520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8520">
		<value condition="String.Contains(Container(8520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8520).ListItem.label] $INFO[Container(8520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title) + String.Contains(Container(8520).ListItem.FolderPath, pvr://)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Season) + !String.IsEmpty(Container(8520).ListItem.Episode) + !String.Contains(Container(8520).ListItem.TvShowTitle,Container(8520).ListItem.Title)">[UPPERCASE]S$INFO[Container(8520).ListItem.Season]E$INFO[Container(8520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Title)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Label)">$INFO[Container(8520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8520">
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle) + !String.IsEmpty(Container(8520).ListItem.Genre)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.TvShowTitle)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Premiered,, • ]$INFO[Container(8520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Year)">$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Duration,,min. • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Artist) + !String.IsEmpty(Container(8520).ListItem.Album)">$INFO[Container(8520).ListItem.Artist,, • ]$INFO[Container(8520).ListItem.Album,, • ]$INFO[Container(8520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.Property(StartTime))">$INFO[Container(8520).ListItem.Property(ChannelName),, • ]$INFO[Container(8520).ListItem.Property(StartTime),, - ]$INFO[Container(8520).ListItem.Property(EndTime),, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8520).ListItem.StartTime)">$INFO[Container(8520).ListItem.ChannelName,, • ]$INFO[Container(8520).ListItem.StartTime,, - ]$INFO[Container(8520).ListItem.EndTime,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		</variable>
	<variable name="8530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8530">
		<value condition="String.Contains(Container(8530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8530).ListItem.label] $INFO[Container(8530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title) + String.Contains(Container(8530).ListItem.FolderPath, pvr://)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Season) + !String.IsEmpty(Container(8530).ListItem.Episode) + !String.Contains(Container(8530).ListItem.TvShowTitle,Container(8530).ListItem.Title)">[UPPERCASE]S$INFO[Container(8530).ListItem.Season]E$INFO[Container(8530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Title)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Label)">$INFO[Container(8530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8530">
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle) + !String.IsEmpty(Container(8530).ListItem.Genre)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.TvShowTitle)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Premiered,, • ]$INFO[Container(8530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Year)">$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Duration,,min. • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Artist) + !String.IsEmpty(Container(8530).ListItem.Album)">$INFO[Container(8530).ListItem.Artist,, • ]$INFO[Container(8530).ListItem.Album,, • ]$INFO[Container(8530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.Property(StartTime))">$INFO[Container(8530).ListItem.Property(ChannelName),, • ]$INFO[Container(8530).ListItem.Property(StartTime),, - ]$INFO[Container(8530).ListItem.Property(EndTime),, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8530).ListItem.StartTime)">$INFO[Container(8530).ListItem.ChannelName,, • ]$INFO[Container(8530).ListItem.StartTime,, - ]$INFO[Container(8530).ListItem.EndTime,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		</variable>
	<variable name="8540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8540">
		<value condition="String.Contains(Container(8540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8540).ListItem.label] $INFO[Container(8540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title) + String.Contains(Container(8540).ListItem.FolderPath, pvr://)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Season) + !String.IsEmpty(Container(8540).ListItem.Episode) + !String.Contains(Container(8540).ListItem.TvShowTitle,Container(8540).ListItem.Title)">[UPPERCASE]S$INFO[Container(8540).ListItem.Season]E$INFO[Container(8540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Title)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Label)">$INFO[Container(8540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8540">
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle) + !String.IsEmpty(Container(8540).ListItem.Genre)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.TvShowTitle)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Premiered,, • ]$INFO[Container(8540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Year)">$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Duration,,min. • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Artist) + !String.IsEmpty(Container(8540).ListItem.Album)">$INFO[Container(8540).ListItem.Artist,, • ]$INFO[Container(8540).ListItem.Album,, • ]$INFO[Container(8540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.Property(StartTime))">$INFO[Container(8540).ListItem.Property(ChannelName),, • ]$INFO[Container(8540).ListItem.Property(StartTime),, - ]$INFO[Container(8540).ListItem.Property(EndTime),, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8540).ListItem.StartTime)">$INFO[Container(8540).ListItem.ChannelName,, • ]$INFO[Container(8540).ListItem.StartTime,, - ]$INFO[Container(8540).ListItem.EndTime,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		</variable>
	<variable name="8550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8550">
		<value condition="String.Contains(Container(8550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8550).ListItem.label] $INFO[Container(8550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title) + String.Contains(Container(8550).ListItem.FolderPath, pvr://)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Season) + !String.IsEmpty(Container(8550).ListItem.Episode) + !String.Contains(Container(8550).ListItem.TvShowTitle,Container(8550).ListItem.Title)">[UPPERCASE]S$INFO[Container(8550).ListItem.Season]E$INFO[Container(8550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Title)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Label)">$INFO[Container(8550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8550">
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle) + !String.IsEmpty(Container(8550).ListItem.Genre)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.TvShowTitle)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Premiered,, • ]$INFO[Container(8550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Year)">$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Duration,,min. • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Artist) + !String.IsEmpty(Container(8550).ListItem.Album)">$INFO[Container(8550).ListItem.Artist,, • ]$INFO[Container(8550).ListItem.Album,, • ]$INFO[Container(8550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.Property(StartTime))">$INFO[Container(8550).ListItem.Property(ChannelName),, • ]$INFO[Container(8550).ListItem.Property(StartTime),, - ]$INFO[Container(8550).ListItem.Property(EndTime),, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8550).ListItem.StartTime)">$INFO[Container(8550).ListItem.ChannelName,, • ]$INFO[Container(8550).ListItem.StartTime,, - ]$INFO[Container(8550).ListItem.EndTime,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		</variable>
	<variable name="8560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8560">
		<value condition="String.Contains(Container(8560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8560).ListItem.label] $INFO[Container(8560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title) + String.Contains(Container(8560).ListItem.FolderPath, pvr://)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Season) + !String.IsEmpty(Container(8560).ListItem.Episode) + !String.Contains(Container(8560).ListItem.TvShowTitle,Container(8560).ListItem.Title)">[UPPERCASE]S$INFO[Container(8560).ListItem.Season]E$INFO[Container(8560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Title)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Label)">$INFO[Container(8560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8560">
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle) + !String.IsEmpty(Container(8560).ListItem.Genre)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.TvShowTitle)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Premiered,, • ]$INFO[Container(8560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Year)">$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Duration,,min. • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Artist) + !String.IsEmpty(Container(8560).ListItem.Album)">$INFO[Container(8560).ListItem.Artist,, • ]$INFO[Container(8560).ListItem.Album,, • ]$INFO[Container(8560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.Property(StartTime))">$INFO[Container(8560).ListItem.Property(ChannelName),, • ]$INFO[Container(8560).ListItem.Property(StartTime),, - ]$INFO[Container(8560).ListItem.Property(EndTime),, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8560).ListItem.StartTime)">$INFO[Container(8560).ListItem.ChannelName,, • ]$INFO[Container(8560).ListItem.StartTime,, - ]$INFO[Container(8560).ListItem.EndTime,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		</variable>
	<variable name="8570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8570">
		<value condition="String.Contains(Container(8570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8570).ListItem.label] $INFO[Container(8570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title) + String.Contains(Container(8570).ListItem.FolderPath, pvr://)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Season) + !String.IsEmpty(Container(8570).ListItem.Episode) + !String.Contains(Container(8570).ListItem.TvShowTitle,Container(8570).ListItem.Title)">[UPPERCASE]S$INFO[Container(8570).ListItem.Season]E$INFO[Container(8570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Title)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Label)">$INFO[Container(8570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8570">
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle) + !String.IsEmpty(Container(8570).ListItem.Genre)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.TvShowTitle)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Premiered,, • ]$INFO[Container(8570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Year)">$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Duration,,min. • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Artist) + !String.IsEmpty(Container(8570).ListItem.Album)">$INFO[Container(8570).ListItem.Artist,, • ]$INFO[Container(8570).ListItem.Album,, • ]$INFO[Container(8570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.Property(StartTime))">$INFO[Container(8570).ListItem.Property(ChannelName),, • ]$INFO[Container(8570).ListItem.Property(StartTime),, - ]$INFO[Container(8570).ListItem.Property(EndTime),, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8570).ListItem.StartTime)">$INFO[Container(8570).ListItem.ChannelName,, • ]$INFO[Container(8570).ListItem.StartTime,, - ]$INFO[Container(8570).ListItem.EndTime,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		</variable>
	<variable name="8580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-8580">
		<value condition="String.Contains(Container(8580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8580).ListItem.label] $INFO[Container(8580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title) + String.Contains(Container(8580).ListItem.FolderPath, pvr://)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Season) + !String.IsEmpty(Container(8580).ListItem.Episode) + !String.Contains(Container(8580).ListItem.TvShowTitle,Container(8580).ListItem.Title)">[UPPERCASE]S$INFO[Container(8580).ListItem.Season]E$INFO[Container(8580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Title)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Label)">$INFO[Container(8580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-8580">
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle) + !String.IsEmpty(Container(8580).ListItem.Genre)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.TvShowTitle)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Premiered,, • ]$INFO[Container(8580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Year)">$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Duration,,min. • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Artist) + !String.IsEmpty(Container(8580).ListItem.Album)">$INFO[Container(8580).ListItem.Artist,, • ]$INFO[Container(8580).ListItem.Album,, • ]$INFO[Container(8580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.Property(StartTime))">$INFO[Container(8580).ListItem.Property(ChannelName),, • ]$INFO[Container(8580).ListItem.Property(StartTime),, - ]$INFO[Container(8580).ListItem.Property(EndTime),, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(8580).ListItem.StartTime)">$INFO[Container(8580).ListItem.ChannelName,, • ]$INFO[Container(8580).ListItem.StartTime,, - ]$INFO[Container(8580).ListItem.EndTime,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-8">
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-musicvideos),1)" />
		<value>Random Music Videos</value>
		</variable>
	<variable name="11510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (Home Movies).xsp</value>
		</variable>
	<variable name="widgetinfolabel-11510">
		<value condition="String.Contains(Container(11510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11510).ListItem.label] $INFO[Container(11510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Title) + String.Contains(Container(11510).ListItem.FolderPath, pvr://)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Season) + !String.IsEmpty(Container(11510).ListItem.Episode) + !String.Contains(Container(11510).ListItem.TvShowTitle,Container(11510).ListItem.Title)">[UPPERCASE]S$INFO[Container(11510).ListItem.Season]E$INFO[Container(11510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Title)">$INFO[Container(11510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Label)">$INFO[Container(11510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11510">
		<value condition="!String.IsEmpty(Container(11510).ListItem.TvShowTitle) + !String.IsEmpty(Container(11510).ListItem.Genre)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.TvShowTitle)">$INFO[Container(11510).ListItem.TvShowTitle,, • ]$INFO[Container(11510).ListItem.Premiered,, • ]$INFO[Container(11510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Year)">$INFO[Container(11510).ListItem.Year,, • ]$INFO[Container(11510).ListItem.Duration,,min. • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Artist) + !String.IsEmpty(Container(11510).ListItem.Album)">$INFO[Container(11510).ListItem.Artist,, • ]$INFO[Container(11510).ListItem.Album,, • ]$INFO[Container(11510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.Property(StartTime))">$INFO[Container(11510).ListItem.Property(ChannelName),, • ]$INFO[Container(11510).ListItem.Property(StartTime),, - ]$INFO[Container(11510).ListItem.Property(EndTime),, • ]$INFO[Container(11510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11510).ListItem.StartTime)">$INFO[Container(11510).ListItem.ChannelName,, • ]$INFO[Container(11510).ListItem.StartTime,, - ]$INFO[Container(11510).ListItem.EndTime,, • ]$INFO[Container(11510).ListItem.Genre]</value>
		</variable>
	<variable name="11520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (Home Holiday Movies).xsp</value>
		</variable>
	<variable name="widgetinfolabel-11520">
		<value condition="String.Contains(Container(11520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11520).ListItem.label] $INFO[Container(11520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Title) + String.Contains(Container(11520).ListItem.FolderPath, pvr://)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Season) + !String.IsEmpty(Container(11520).ListItem.Episode) + !String.Contains(Container(11520).ListItem.TvShowTitle,Container(11520).ListItem.Title)">[UPPERCASE]S$INFO[Container(11520).ListItem.Season]E$INFO[Container(11520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Title)">$INFO[Container(11520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Label)">$INFO[Container(11520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11520">
		<value condition="!String.IsEmpty(Container(11520).ListItem.TvShowTitle) + !String.IsEmpty(Container(11520).ListItem.Genre)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.TvShowTitle)">$INFO[Container(11520).ListItem.TvShowTitle,, • ]$INFO[Container(11520).ListItem.Premiered,, • ]$INFO[Container(11520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Year)">$INFO[Container(11520).ListItem.Year,, • ]$INFO[Container(11520).ListItem.Duration,,min. • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Artist) + !String.IsEmpty(Container(11520).ListItem.Album)">$INFO[Container(11520).ListItem.Artist,, • ]$INFO[Container(11520).ListItem.Album,, • ]$INFO[Container(11520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.Property(StartTime))">$INFO[Container(11520).ListItem.Property(ChannelName),, • ]$INFO[Container(11520).ListItem.Property(StartTime),, - ]$INFO[Container(11520).ListItem.Property(EndTime),, • ]$INFO[Container(11520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11520).ListItem.StartTime)">$INFO[Container(11520).ListItem.ChannelName,, • ]$INFO[Container(11520).ListItem.StartTime,, - ]$INFO[Container(11520).ListItem.EndTime,, • ]$INFO[Container(11520).ListItem.Genre]</value>
		</variable>
	<variable name="11530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Home Movies.xsp</value>
		</variable>
	<variable name="widgetinfolabel-11530">
		<value condition="String.Contains(Container(11530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11530).ListItem.label] $INFO[Container(11530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Title) + String.Contains(Container(11530).ListItem.FolderPath, pvr://)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Season) + !String.IsEmpty(Container(11530).ListItem.Episode) + !String.Contains(Container(11530).ListItem.TvShowTitle,Container(11530).ListItem.Title)">[UPPERCASE]S$INFO[Container(11530).ListItem.Season]E$INFO[Container(11530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Title)">$INFO[Container(11530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Label)">$INFO[Container(11530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11530">
		<value condition="!String.IsEmpty(Container(11530).ListItem.TvShowTitle) + !String.IsEmpty(Container(11530).ListItem.Genre)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.TvShowTitle)">$INFO[Container(11530).ListItem.TvShowTitle,, • ]$INFO[Container(11530).ListItem.Premiered,, • ]$INFO[Container(11530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Year)">$INFO[Container(11530).ListItem.Year,, • ]$INFO[Container(11530).ListItem.Duration,,min. • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Artist) + !String.IsEmpty(Container(11530).ListItem.Album)">$INFO[Container(11530).ListItem.Artist,, • ]$INFO[Container(11530).ListItem.Album,, • ]$INFO[Container(11530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.Property(StartTime))">$INFO[Container(11530).ListItem.Property(ChannelName),, • ]$INFO[Container(11530).ListItem.Property(StartTime),, - ]$INFO[Container(11530).ListItem.Property(EndTime),, • ]$INFO[Container(11530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11530).ListItem.StartTime)">$INFO[Container(11530).ListItem.ChannelName,, • ]$INFO[Container(11530).ListItem.StartTime,, - ]$INFO[Container(11530).ListItem.EndTime,, • ]$INFO[Container(11530).ListItem.Genre]</value>
		</variable>
	<variable name="11540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Home Movies (Holiday).xsp</value>
		</variable>
	<variable name="widgetinfolabel-11540">
		<value condition="String.Contains(Container(11540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11540).ListItem.label] $INFO[Container(11540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Title) + String.Contains(Container(11540).ListItem.FolderPath, pvr://)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Season) + !String.IsEmpty(Container(11540).ListItem.Episode) + !String.Contains(Container(11540).ListItem.TvShowTitle,Container(11540).ListItem.Title)">[UPPERCASE]S$INFO[Container(11540).ListItem.Season]E$INFO[Container(11540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Title)">$INFO[Container(11540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Label)">$INFO[Container(11540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11540">
		<value condition="!String.IsEmpty(Container(11540).ListItem.TvShowTitle) + !String.IsEmpty(Container(11540).ListItem.Genre)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.TvShowTitle)">$INFO[Container(11540).ListItem.TvShowTitle,, • ]$INFO[Container(11540).ListItem.Premiered,, • ]$INFO[Container(11540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Year)">$INFO[Container(11540).ListItem.Year,, • ]$INFO[Container(11540).ListItem.Duration,,min. • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Artist) + !String.IsEmpty(Container(11540).ListItem.Album)">$INFO[Container(11540).ListItem.Artist,, • ]$INFO[Container(11540).ListItem.Album,, • ]$INFO[Container(11540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.Property(StartTime))">$INFO[Container(11540).ListItem.Property(ChannelName),, • ]$INFO[Container(11540).ListItem.Property(StartTime),, - ]$INFO[Container(11540).ListItem.Property(EndTime),, • ]$INFO[Container(11540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11540).ListItem.StartTime)">$INFO[Container(11540).ListItem.ChannelName,, • ]$INFO[Container(11540).ListItem.StartTime,, - ]$INFO[Container(11540).ListItem.EndTime,, • ]$INFO[Container(11540).ListItem.Genre]</value>
		</variable>
	<variable name="11550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-11550">
		<value condition="String.Contains(Container(11550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11550).ListItem.label] $INFO[Container(11550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Title) + String.Contains(Container(11550).ListItem.FolderPath, pvr://)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Season) + !String.IsEmpty(Container(11550).ListItem.Episode) + !String.Contains(Container(11550).ListItem.TvShowTitle,Container(11550).ListItem.Title)">[UPPERCASE]S$INFO[Container(11550).ListItem.Season]E$INFO[Container(11550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Title)">$INFO[Container(11550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Label)">$INFO[Container(11550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11550">
		<value condition="!String.IsEmpty(Container(11550).ListItem.TvShowTitle) + !String.IsEmpty(Container(11550).ListItem.Genre)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.TvShowTitle)">$INFO[Container(11550).ListItem.TvShowTitle,, • ]$INFO[Container(11550).ListItem.Premiered,, • ]$INFO[Container(11550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Year)">$INFO[Container(11550).ListItem.Year,, • ]$INFO[Container(11550).ListItem.Duration,,min. • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Artist) + !String.IsEmpty(Container(11550).ListItem.Album)">$INFO[Container(11550).ListItem.Artist,, • ]$INFO[Container(11550).ListItem.Album,, • ]$INFO[Container(11550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.Property(StartTime))">$INFO[Container(11550).ListItem.Property(ChannelName),, • ]$INFO[Container(11550).ListItem.Property(StartTime),, - ]$INFO[Container(11550).ListItem.Property(EndTime),, • ]$INFO[Container(11550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11550).ListItem.StartTime)">$INFO[Container(11550).ListItem.ChannelName,, • ]$INFO[Container(11550).ListItem.StartTime,, - ]$INFO[Container(11550).ListItem.EndTime,, • ]$INFO[Container(11550).ListItem.Genre]</value>
		</variable>
	<variable name="11560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-11560">
		<value condition="String.Contains(Container(11560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11560).ListItem.label] $INFO[Container(11560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Title) + String.Contains(Container(11560).ListItem.FolderPath, pvr://)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Season) + !String.IsEmpty(Container(11560).ListItem.Episode) + !String.Contains(Container(11560).ListItem.TvShowTitle,Container(11560).ListItem.Title)">[UPPERCASE]S$INFO[Container(11560).ListItem.Season]E$INFO[Container(11560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Title)">$INFO[Container(11560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Label)">$INFO[Container(11560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11560">
		<value condition="!String.IsEmpty(Container(11560).ListItem.TvShowTitle) + !String.IsEmpty(Container(11560).ListItem.Genre)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.TvShowTitle)">$INFO[Container(11560).ListItem.TvShowTitle,, • ]$INFO[Container(11560).ListItem.Premiered,, • ]$INFO[Container(11560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Year)">$INFO[Container(11560).ListItem.Year,, • ]$INFO[Container(11560).ListItem.Duration,,min. • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Artist) + !String.IsEmpty(Container(11560).ListItem.Album)">$INFO[Container(11560).ListItem.Artist,, • ]$INFO[Container(11560).ListItem.Album,, • ]$INFO[Container(11560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.Property(StartTime))">$INFO[Container(11560).ListItem.Property(ChannelName),, • ]$INFO[Container(11560).ListItem.Property(StartTime),, - ]$INFO[Container(11560).ListItem.Property(EndTime),, • ]$INFO[Container(11560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11560).ListItem.StartTime)">$INFO[Container(11560).ListItem.ChannelName,, • ]$INFO[Container(11560).ListItem.StartTime,, - ]$INFO[Container(11560).ListItem.EndTime,, • ]$INFO[Container(11560).ListItem.Genre]</value>
		</variable>
	<variable name="11570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-11570">
		<value condition="String.Contains(Container(11570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11570).ListItem.label] $INFO[Container(11570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Title) + String.Contains(Container(11570).ListItem.FolderPath, pvr://)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Season) + !String.IsEmpty(Container(11570).ListItem.Episode) + !String.Contains(Container(11570).ListItem.TvShowTitle,Container(11570).ListItem.Title)">[UPPERCASE]S$INFO[Container(11570).ListItem.Season]E$INFO[Container(11570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Title)">$INFO[Container(11570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Label)">$INFO[Container(11570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11570">
		<value condition="!String.IsEmpty(Container(11570).ListItem.TvShowTitle) + !String.IsEmpty(Container(11570).ListItem.Genre)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.TvShowTitle)">$INFO[Container(11570).ListItem.TvShowTitle,, • ]$INFO[Container(11570).ListItem.Premiered,, • ]$INFO[Container(11570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Year)">$INFO[Container(11570).ListItem.Year,, • ]$INFO[Container(11570).ListItem.Duration,,min. • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Artist) + !String.IsEmpty(Container(11570).ListItem.Album)">$INFO[Container(11570).ListItem.Artist,, • ]$INFO[Container(11570).ListItem.Album,, • ]$INFO[Container(11570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.Property(StartTime))">$INFO[Container(11570).ListItem.Property(ChannelName),, • ]$INFO[Container(11570).ListItem.Property(StartTime),, - ]$INFO[Container(11570).ListItem.Property(EndTime),, • ]$INFO[Container(11570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11570).ListItem.StartTime)">$INFO[Container(11570).ListItem.ChannelName,, • ]$INFO[Container(11570).ListItem.StartTime,, - ]$INFO[Container(11570).ListItem.EndTime,, • ]$INFO[Container(11570).ListItem.Genre]</value>
		</variable>
	<variable name="11580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-11580">
		<value condition="String.Contains(Container(11580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(11580).ListItem.label] $INFO[Container(11580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Title) + String.Contains(Container(11580).ListItem.FolderPath, pvr://)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Season) + !String.IsEmpty(Container(11580).ListItem.Episode) + !String.Contains(Container(11580).ListItem.TvShowTitle,Container(11580).ListItem.Title)">[UPPERCASE]S$INFO[Container(11580).ListItem.Season]E$INFO[Container(11580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Title)">$INFO[Container(11580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Label)">$INFO[Container(11580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-11580">
		<value condition="!String.IsEmpty(Container(11580).ListItem.TvShowTitle) + !String.IsEmpty(Container(11580).ListItem.Genre)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.TvShowTitle)">$INFO[Container(11580).ListItem.TvShowTitle,, • ]$INFO[Container(11580).ListItem.Premiered,, • ]$INFO[Container(11580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Year)">$INFO[Container(11580).ListItem.Year,, • ]$INFO[Container(11580).ListItem.Duration,,min. • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Artist) + !String.IsEmpty(Container(11580).ListItem.Album)">$INFO[Container(11580).ListItem.Artist,, • ]$INFO[Container(11580).ListItem.Album,, • ]$INFO[Container(11580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.Property(StartTime))">$INFO[Container(11580).ListItem.Property(ChannelName),, • ]$INFO[Container(11580).ListItem.Property(StartTime),, - ]$INFO[Container(11580).ListItem.Property(EndTime),, • ]$INFO[Container(11580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(11580).ListItem.StartTime)">$INFO[Container(11580).ListItem.ChannelName,, • ]$INFO[Container(11580).ListItem.StartTime,, - ]$INFO[Container(11580).ListItem.EndTime,, • ]$INFO[Container(11580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-11">
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),3)">Home Movies (Holiday)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),2)">Home Movies</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-homemovies),1)">Unwatched (Home Holiday Movies)</value>
		<value>Unwatched (Home Movies)</value>
		</variable>
	<variable name="12510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>smb://NAS/Media/Photos/</value>
		</variable>
	<variable name="widgetinfolabel-12510">
		<value condition="String.Contains(Container(12510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12510).ListItem.label] $INFO[Container(12510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Title) + String.Contains(Container(12510).ListItem.FolderPath, pvr://)">$INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Season) + !String.IsEmpty(Container(12510).ListItem.Episode) + !String.Contains(Container(12510).ListItem.TvShowTitle,Container(12510).ListItem.Title)">[UPPERCASE]S$INFO[Container(12510).ListItem.Season]E$INFO[Container(12510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Title)">$INFO[Container(12510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Label)">$INFO[Container(12510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12510">
		<value condition="!String.IsEmpty(Container(12510).ListItem.TvShowTitle) + !String.IsEmpty(Container(12510).ListItem.Genre)">$INFO[Container(12510).ListItem.TvShowTitle,, • ]$INFO[Container(12510).ListItem.Year,, • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.TvShowTitle)">$INFO[Container(12510).ListItem.TvShowTitle,, • ]$INFO[Container(12510).ListItem.Premiered,, • ]$INFO[Container(12510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Year)">$INFO[Container(12510).ListItem.Year,, • ]$INFO[Container(12510).ListItem.Duration,,min. • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Artist) + !String.IsEmpty(Container(12510).ListItem.Album)">$INFO[Container(12510).ListItem.Artist,, • ]$INFO[Container(12510).ListItem.Album,, • ]$INFO[Container(12510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.Property(StartTime))">$INFO[Container(12510).ListItem.Property(ChannelName),, • ]$INFO[Container(12510).ListItem.Property(StartTime),, - ]$INFO[Container(12510).ListItem.Property(EndTime),, • ]$INFO[Container(12510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12510).ListItem.StartTime)">$INFO[Container(12510).ListItem.ChannelName,, • ]$INFO[Container(12510).ListItem.StartTime,, - ]$INFO[Container(12510).ListItem.EndTime,, • ]$INFO[Container(12510).ListItem.Genre]</value>
		</variable>
	<variable name="12520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12520">
		<value condition="String.Contains(Container(12520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12520).ListItem.label] $INFO[Container(12520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Title) + String.Contains(Container(12520).ListItem.FolderPath, pvr://)">$INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Season) + !String.IsEmpty(Container(12520).ListItem.Episode) + !String.Contains(Container(12520).ListItem.TvShowTitle,Container(12520).ListItem.Title)">[UPPERCASE]S$INFO[Container(12520).ListItem.Season]E$INFO[Container(12520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Title)">$INFO[Container(12520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Label)">$INFO[Container(12520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12520">
		<value condition="!String.IsEmpty(Container(12520).ListItem.TvShowTitle) + !String.IsEmpty(Container(12520).ListItem.Genre)">$INFO[Container(12520).ListItem.TvShowTitle,, • ]$INFO[Container(12520).ListItem.Year,, • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.TvShowTitle)">$INFO[Container(12520).ListItem.TvShowTitle,, • ]$INFO[Container(12520).ListItem.Premiered,, • ]$INFO[Container(12520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Year)">$INFO[Container(12520).ListItem.Year,, • ]$INFO[Container(12520).ListItem.Duration,,min. • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Artist) + !String.IsEmpty(Container(12520).ListItem.Album)">$INFO[Container(12520).ListItem.Artist,, • ]$INFO[Container(12520).ListItem.Album,, • ]$INFO[Container(12520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.Property(StartTime))">$INFO[Container(12520).ListItem.Property(ChannelName),, • ]$INFO[Container(12520).ListItem.Property(StartTime),, - ]$INFO[Container(12520).ListItem.Property(EndTime),, • ]$INFO[Container(12520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12520).ListItem.StartTime)">$INFO[Container(12520).ListItem.ChannelName,, • ]$INFO[Container(12520).ListItem.StartTime,, - ]$INFO[Container(12520).ListItem.EndTime,, • ]$INFO[Container(12520).ListItem.Genre]</value>
		</variable>
	<variable name="12530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12530">
		<value condition="String.Contains(Container(12530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12530).ListItem.label] $INFO[Container(12530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Title) + String.Contains(Container(12530).ListItem.FolderPath, pvr://)">$INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Season) + !String.IsEmpty(Container(12530).ListItem.Episode) + !String.Contains(Container(12530).ListItem.TvShowTitle,Container(12530).ListItem.Title)">[UPPERCASE]S$INFO[Container(12530).ListItem.Season]E$INFO[Container(12530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Title)">$INFO[Container(12530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Label)">$INFO[Container(12530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12530">
		<value condition="!String.IsEmpty(Container(12530).ListItem.TvShowTitle) + !String.IsEmpty(Container(12530).ListItem.Genre)">$INFO[Container(12530).ListItem.TvShowTitle,, • ]$INFO[Container(12530).ListItem.Year,, • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.TvShowTitle)">$INFO[Container(12530).ListItem.TvShowTitle,, • ]$INFO[Container(12530).ListItem.Premiered,, • ]$INFO[Container(12530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Year)">$INFO[Container(12530).ListItem.Year,, • ]$INFO[Container(12530).ListItem.Duration,,min. • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Artist) + !String.IsEmpty(Container(12530).ListItem.Album)">$INFO[Container(12530).ListItem.Artist,, • ]$INFO[Container(12530).ListItem.Album,, • ]$INFO[Container(12530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.Property(StartTime))">$INFO[Container(12530).ListItem.Property(ChannelName),, • ]$INFO[Container(12530).ListItem.Property(StartTime),, - ]$INFO[Container(12530).ListItem.Property(EndTime),, • ]$INFO[Container(12530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12530).ListItem.StartTime)">$INFO[Container(12530).ListItem.ChannelName,, • ]$INFO[Container(12530).ListItem.StartTime,, - ]$INFO[Container(12530).ListItem.EndTime,, • ]$INFO[Container(12530).ListItem.Genre]</value>
		</variable>
	<variable name="12540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12540">
		<value condition="String.Contains(Container(12540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12540).ListItem.label] $INFO[Container(12540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Title) + String.Contains(Container(12540).ListItem.FolderPath, pvr://)">$INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Season) + !String.IsEmpty(Container(12540).ListItem.Episode) + !String.Contains(Container(12540).ListItem.TvShowTitle,Container(12540).ListItem.Title)">[UPPERCASE]S$INFO[Container(12540).ListItem.Season]E$INFO[Container(12540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Title)">$INFO[Container(12540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Label)">$INFO[Container(12540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12540">
		<value condition="!String.IsEmpty(Container(12540).ListItem.TvShowTitle) + !String.IsEmpty(Container(12540).ListItem.Genre)">$INFO[Container(12540).ListItem.TvShowTitle,, • ]$INFO[Container(12540).ListItem.Year,, • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.TvShowTitle)">$INFO[Container(12540).ListItem.TvShowTitle,, • ]$INFO[Container(12540).ListItem.Premiered,, • ]$INFO[Container(12540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Year)">$INFO[Container(12540).ListItem.Year,, • ]$INFO[Container(12540).ListItem.Duration,,min. • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Artist) + !String.IsEmpty(Container(12540).ListItem.Album)">$INFO[Container(12540).ListItem.Artist,, • ]$INFO[Container(12540).ListItem.Album,, • ]$INFO[Container(12540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.Property(StartTime))">$INFO[Container(12540).ListItem.Property(ChannelName),, • ]$INFO[Container(12540).ListItem.Property(StartTime),, - ]$INFO[Container(12540).ListItem.Property(EndTime),, • ]$INFO[Container(12540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12540).ListItem.StartTime)">$INFO[Container(12540).ListItem.ChannelName,, • ]$INFO[Container(12540).ListItem.StartTime,, - ]$INFO[Container(12540).ListItem.EndTime,, • ]$INFO[Container(12540).ListItem.Genre]</value>
		</variable>
	<variable name="12550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12550">
		<value condition="String.Contains(Container(12550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12550).ListItem.label] $INFO[Container(12550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Title) + String.Contains(Container(12550).ListItem.FolderPath, pvr://)">$INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Season) + !String.IsEmpty(Container(12550).ListItem.Episode) + !String.Contains(Container(12550).ListItem.TvShowTitle,Container(12550).ListItem.Title)">[UPPERCASE]S$INFO[Container(12550).ListItem.Season]E$INFO[Container(12550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Title)">$INFO[Container(12550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Label)">$INFO[Container(12550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12550">
		<value condition="!String.IsEmpty(Container(12550).ListItem.TvShowTitle) + !String.IsEmpty(Container(12550).ListItem.Genre)">$INFO[Container(12550).ListItem.TvShowTitle,, • ]$INFO[Container(12550).ListItem.Year,, • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.TvShowTitle)">$INFO[Container(12550).ListItem.TvShowTitle,, • ]$INFO[Container(12550).ListItem.Premiered,, • ]$INFO[Container(12550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Year)">$INFO[Container(12550).ListItem.Year,, • ]$INFO[Container(12550).ListItem.Duration,,min. • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Artist) + !String.IsEmpty(Container(12550).ListItem.Album)">$INFO[Container(12550).ListItem.Artist,, • ]$INFO[Container(12550).ListItem.Album,, • ]$INFO[Container(12550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.Property(StartTime))">$INFO[Container(12550).ListItem.Property(ChannelName),, • ]$INFO[Container(12550).ListItem.Property(StartTime),, - ]$INFO[Container(12550).ListItem.Property(EndTime),, • ]$INFO[Container(12550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12550).ListItem.StartTime)">$INFO[Container(12550).ListItem.ChannelName,, • ]$INFO[Container(12550).ListItem.StartTime,, - ]$INFO[Container(12550).ListItem.EndTime,, • ]$INFO[Container(12550).ListItem.Genre]</value>
		</variable>
	<variable name="12560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12560">
		<value condition="String.Contains(Container(12560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12560).ListItem.label] $INFO[Container(12560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Title) + String.Contains(Container(12560).ListItem.FolderPath, pvr://)">$INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Season) + !String.IsEmpty(Container(12560).ListItem.Episode) + !String.Contains(Container(12560).ListItem.TvShowTitle,Container(12560).ListItem.Title)">[UPPERCASE]S$INFO[Container(12560).ListItem.Season]E$INFO[Container(12560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Title)">$INFO[Container(12560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Label)">$INFO[Container(12560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12560">
		<value condition="!String.IsEmpty(Container(12560).ListItem.TvShowTitle) + !String.IsEmpty(Container(12560).ListItem.Genre)">$INFO[Container(12560).ListItem.TvShowTitle,, • ]$INFO[Container(12560).ListItem.Year,, • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.TvShowTitle)">$INFO[Container(12560).ListItem.TvShowTitle,, • ]$INFO[Container(12560).ListItem.Premiered,, • ]$INFO[Container(12560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Year)">$INFO[Container(12560).ListItem.Year,, • ]$INFO[Container(12560).ListItem.Duration,,min. • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Artist) + !String.IsEmpty(Container(12560).ListItem.Album)">$INFO[Container(12560).ListItem.Artist,, • ]$INFO[Container(12560).ListItem.Album,, • ]$INFO[Container(12560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.Property(StartTime))">$INFO[Container(12560).ListItem.Property(ChannelName),, • ]$INFO[Container(12560).ListItem.Property(StartTime),, - ]$INFO[Container(12560).ListItem.Property(EndTime),, • ]$INFO[Container(12560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12560).ListItem.StartTime)">$INFO[Container(12560).ListItem.ChannelName,, • ]$INFO[Container(12560).ListItem.StartTime,, - ]$INFO[Container(12560).ListItem.EndTime,, • ]$INFO[Container(12560).ListItem.Genre]</value>
		</variable>
	<variable name="12570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12570">
		<value condition="String.Contains(Container(12570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12570).ListItem.label] $INFO[Container(12570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Title) + String.Contains(Container(12570).ListItem.FolderPath, pvr://)">$INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Season) + !String.IsEmpty(Container(12570).ListItem.Episode) + !String.Contains(Container(12570).ListItem.TvShowTitle,Container(12570).ListItem.Title)">[UPPERCASE]S$INFO[Container(12570).ListItem.Season]E$INFO[Container(12570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Title)">$INFO[Container(12570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Label)">$INFO[Container(12570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12570">
		<value condition="!String.IsEmpty(Container(12570).ListItem.TvShowTitle) + !String.IsEmpty(Container(12570).ListItem.Genre)">$INFO[Container(12570).ListItem.TvShowTitle,, • ]$INFO[Container(12570).ListItem.Year,, • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.TvShowTitle)">$INFO[Container(12570).ListItem.TvShowTitle,, • ]$INFO[Container(12570).ListItem.Premiered,, • ]$INFO[Container(12570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Year)">$INFO[Container(12570).ListItem.Year,, • ]$INFO[Container(12570).ListItem.Duration,,min. • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Artist) + !String.IsEmpty(Container(12570).ListItem.Album)">$INFO[Container(12570).ListItem.Artist,, • ]$INFO[Container(12570).ListItem.Album,, • ]$INFO[Container(12570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.Property(StartTime))">$INFO[Container(12570).ListItem.Property(ChannelName),, • ]$INFO[Container(12570).ListItem.Property(StartTime),, - ]$INFO[Container(12570).ListItem.Property(EndTime),, • ]$INFO[Container(12570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12570).ListItem.StartTime)">$INFO[Container(12570).ListItem.ChannelName,, • ]$INFO[Container(12570).ListItem.StartTime,, - ]$INFO[Container(12570).ListItem.EndTime,, • ]$INFO[Container(12570).ListItem.Genre]</value>
		</variable>
	<variable name="12580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-12580">
		<value condition="String.Contains(Container(12580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(12580).ListItem.label] $INFO[Container(12580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Title) + String.Contains(Container(12580).ListItem.FolderPath, pvr://)">$INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Season) + !String.IsEmpty(Container(12580).ListItem.Episode) + !String.Contains(Container(12580).ListItem.TvShowTitle,Container(12580).ListItem.Title)">[UPPERCASE]S$INFO[Container(12580).ListItem.Season]E$INFO[Container(12580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Title)">$INFO[Container(12580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Label)">$INFO[Container(12580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-12580">
		<value condition="!String.IsEmpty(Container(12580).ListItem.TvShowTitle) + !String.IsEmpty(Container(12580).ListItem.Genre)">$INFO[Container(12580).ListItem.TvShowTitle,, • ]$INFO[Container(12580).ListItem.Year,, • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.TvShowTitle)">$INFO[Container(12580).ListItem.TvShowTitle,, • ]$INFO[Container(12580).ListItem.Premiered,, • ]$INFO[Container(12580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Year)">$INFO[Container(12580).ListItem.Year,, • ]$INFO[Container(12580).ListItem.Duration,,min. • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Artist) + !String.IsEmpty(Container(12580).ListItem.Album)">$INFO[Container(12580).ListItem.Artist,, • ]$INFO[Container(12580).ListItem.Album,, • ]$INFO[Container(12580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.Property(StartTime))">$INFO[Container(12580).ListItem.Property(ChannelName),, • ]$INFO[Container(12580).ListItem.Property(StartTime),, - ]$INFO[Container(12580).ListItem.Property(EndTime),, • ]$INFO[Container(12580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(12580).ListItem.StartTime)">$INFO[Container(12580).ListItem.ChannelName,, • ]$INFO[Container(12580).ListItem.StartTime,, - ]$INFO[Container(12580).ListItem.EndTime,, • ]$INFO[Container(12580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-12">
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-photos),1)" />
		<value>Photos</value>
		</variable>
	<variable name="15510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (WWE PPV's).xsp</value>
		</variable>
	<variable name="widgetinfolabel-15510">
		<value condition="String.Contains(Container(15510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15510).ListItem.label] $INFO[Container(15510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Title) + String.Contains(Container(15510).ListItem.FolderPath, pvr://)">$INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Season) + !String.IsEmpty(Container(15510).ListItem.Episode) + !String.Contains(Container(15510).ListItem.TvShowTitle,Container(15510).ListItem.Title)">[UPPERCASE]S$INFO[Container(15510).ListItem.Season]E$INFO[Container(15510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Title)">$INFO[Container(15510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Label)">$INFO[Container(15510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15510">
		<value condition="!String.IsEmpty(Container(15510).ListItem.TvShowTitle) + !String.IsEmpty(Container(15510).ListItem.Genre)">$INFO[Container(15510).ListItem.TvShowTitle,, • ]$INFO[Container(15510).ListItem.Year,, • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.TvShowTitle)">$INFO[Container(15510).ListItem.TvShowTitle,, • ]$INFO[Container(15510).ListItem.Premiered,, • ]$INFO[Container(15510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Year)">$INFO[Container(15510).ListItem.Year,, • ]$INFO[Container(15510).ListItem.Duration,,min. • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Artist) + !String.IsEmpty(Container(15510).ListItem.Album)">$INFO[Container(15510).ListItem.Artist,, • ]$INFO[Container(15510).ListItem.Album,, • ]$INFO[Container(15510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.Property(StartTime))">$INFO[Container(15510).ListItem.Property(ChannelName),, • ]$INFO[Container(15510).ListItem.Property(StartTime),, - ]$INFO[Container(15510).ListItem.Property(EndTime),, • ]$INFO[Container(15510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15510).ListItem.StartTime)">$INFO[Container(15510).ListItem.ChannelName,, • ]$INFO[Container(15510).ListItem.StartTime,, - ]$INFO[Container(15510).ListItem.EndTime,, • ]$INFO[Container(15510).ListItem.Genre]</value>
		</variable>
	<variable name="15520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (UFC PPV's).xsp</value>
		</variable>
	<variable name="widgetinfolabel-15520">
		<value condition="String.Contains(Container(15520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15520).ListItem.label] $INFO[Container(15520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Title) + String.Contains(Container(15520).ListItem.FolderPath, pvr://)">$INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Season) + !String.IsEmpty(Container(15520).ListItem.Episode) + !String.Contains(Container(15520).ListItem.TvShowTitle,Container(15520).ListItem.Title)">[UPPERCASE]S$INFO[Container(15520).ListItem.Season]E$INFO[Container(15520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Title)">$INFO[Container(15520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Label)">$INFO[Container(15520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15520">
		<value condition="!String.IsEmpty(Container(15520).ListItem.TvShowTitle) + !String.IsEmpty(Container(15520).ListItem.Genre)">$INFO[Container(15520).ListItem.TvShowTitle,, • ]$INFO[Container(15520).ListItem.Year,, • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.TvShowTitle)">$INFO[Container(15520).ListItem.TvShowTitle,, • ]$INFO[Container(15520).ListItem.Premiered,, • ]$INFO[Container(15520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Year)">$INFO[Container(15520).ListItem.Year,, • ]$INFO[Container(15520).ListItem.Duration,,min. • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Artist) + !String.IsEmpty(Container(15520).ListItem.Album)">$INFO[Container(15520).ListItem.Artist,, • ]$INFO[Container(15520).ListItem.Album,, • ]$INFO[Container(15520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.Property(StartTime))">$INFO[Container(15520).ListItem.Property(ChannelName),, • ]$INFO[Container(15520).ListItem.Property(StartTime),, - ]$INFO[Container(15520).ListItem.Property(EndTime),, • ]$INFO[Container(15520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15520).ListItem.StartTime)">$INFO[Container(15520).ListItem.ChannelName,, • ]$INFO[Container(15520).ListItem.StartTime,, - ]$INFO[Container(15520).ListItem.EndTime,, • ]$INFO[Container(15520).ListItem.Genre]</value>
		</variable>
	<variable name="15530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Sports PPV's (WWE All PPVs).xsp</value>
		</variable>
	<variable name="widgetinfolabel-15530">
		<value condition="String.Contains(Container(15530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15530).ListItem.label] $INFO[Container(15530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Title) + String.Contains(Container(15530).ListItem.FolderPath, pvr://)">$INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Season) + !String.IsEmpty(Container(15530).ListItem.Episode) + !String.Contains(Container(15530).ListItem.TvShowTitle,Container(15530).ListItem.Title)">[UPPERCASE]S$INFO[Container(15530).ListItem.Season]E$INFO[Container(15530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Title)">$INFO[Container(15530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Label)">$INFO[Container(15530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15530">
		<value condition="!String.IsEmpty(Container(15530).ListItem.TvShowTitle) + !String.IsEmpty(Container(15530).ListItem.Genre)">$INFO[Container(15530).ListItem.TvShowTitle,, • ]$INFO[Container(15530).ListItem.Year,, • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.TvShowTitle)">$INFO[Container(15530).ListItem.TvShowTitle,, • ]$INFO[Container(15530).ListItem.Premiered,, • ]$INFO[Container(15530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Year)">$INFO[Container(15530).ListItem.Year,, • ]$INFO[Container(15530).ListItem.Duration,,min. • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Artist) + !String.IsEmpty(Container(15530).ListItem.Album)">$INFO[Container(15530).ListItem.Artist,, • ]$INFO[Container(15530).ListItem.Album,, • ]$INFO[Container(15530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.Property(StartTime))">$INFO[Container(15530).ListItem.Property(ChannelName),, • ]$INFO[Container(15530).ListItem.Property(StartTime),, - ]$INFO[Container(15530).ListItem.Property(EndTime),, • ]$INFO[Container(15530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15530).ListItem.StartTime)">$INFO[Container(15530).ListItem.ChannelName,, • ]$INFO[Container(15530).ListItem.StartTime,, - ]$INFO[Container(15530).ListItem.EndTime,, • ]$INFO[Container(15530).ListItem.Genre]</value>
		</variable>
	<variable name="15540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Sports PPV's (UFC All PPVs).xsp</value>
		</variable>
	<variable name="widgetinfolabel-15540">
		<value condition="String.Contains(Container(15540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15540).ListItem.label] $INFO[Container(15540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Title) + String.Contains(Container(15540).ListItem.FolderPath, pvr://)">$INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Season) + !String.IsEmpty(Container(15540).ListItem.Episode) + !String.Contains(Container(15540).ListItem.TvShowTitle,Container(15540).ListItem.Title)">[UPPERCASE]S$INFO[Container(15540).ListItem.Season]E$INFO[Container(15540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Title)">$INFO[Container(15540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Label)">$INFO[Container(15540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15540">
		<value condition="!String.IsEmpty(Container(15540).ListItem.TvShowTitle) + !String.IsEmpty(Container(15540).ListItem.Genre)">$INFO[Container(15540).ListItem.TvShowTitle,, • ]$INFO[Container(15540).ListItem.Year,, • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.TvShowTitle)">$INFO[Container(15540).ListItem.TvShowTitle,, • ]$INFO[Container(15540).ListItem.Premiered,, • ]$INFO[Container(15540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Year)">$INFO[Container(15540).ListItem.Year,, • ]$INFO[Container(15540).ListItem.Duration,,min. • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Artist) + !String.IsEmpty(Container(15540).ListItem.Album)">$INFO[Container(15540).ListItem.Artist,, • ]$INFO[Container(15540).ListItem.Album,, • ]$INFO[Container(15540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.Property(StartTime))">$INFO[Container(15540).ListItem.Property(ChannelName),, • ]$INFO[Container(15540).ListItem.Property(StartTime),, - ]$INFO[Container(15540).ListItem.Property(EndTime),, • ]$INFO[Container(15540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15540).ListItem.StartTime)">$INFO[Container(15540).ListItem.ChannelName,, • ]$INFO[Container(15540).ListItem.StartTime,, - ]$INFO[Container(15540).ListItem.EndTime,, • ]$INFO[Container(15540).ListItem.Genre]</value>
		</variable>
	<variable name="15550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-15550">
		<value condition="String.Contains(Container(15550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15550).ListItem.label] $INFO[Container(15550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Title) + String.Contains(Container(15550).ListItem.FolderPath, pvr://)">$INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Season) + !String.IsEmpty(Container(15550).ListItem.Episode) + !String.Contains(Container(15550).ListItem.TvShowTitle,Container(15550).ListItem.Title)">[UPPERCASE]S$INFO[Container(15550).ListItem.Season]E$INFO[Container(15550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Title)">$INFO[Container(15550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Label)">$INFO[Container(15550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15550">
		<value condition="!String.IsEmpty(Container(15550).ListItem.TvShowTitle) + !String.IsEmpty(Container(15550).ListItem.Genre)">$INFO[Container(15550).ListItem.TvShowTitle,, • ]$INFO[Container(15550).ListItem.Year,, • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.TvShowTitle)">$INFO[Container(15550).ListItem.TvShowTitle,, • ]$INFO[Container(15550).ListItem.Premiered,, • ]$INFO[Container(15550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Year)">$INFO[Container(15550).ListItem.Year,, • ]$INFO[Container(15550).ListItem.Duration,,min. • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Artist) + !String.IsEmpty(Container(15550).ListItem.Album)">$INFO[Container(15550).ListItem.Artist,, • ]$INFO[Container(15550).ListItem.Album,, • ]$INFO[Container(15550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.Property(StartTime))">$INFO[Container(15550).ListItem.Property(ChannelName),, • ]$INFO[Container(15550).ListItem.Property(StartTime),, - ]$INFO[Container(15550).ListItem.Property(EndTime),, • ]$INFO[Container(15550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15550).ListItem.StartTime)">$INFO[Container(15550).ListItem.ChannelName,, • ]$INFO[Container(15550).ListItem.StartTime,, - ]$INFO[Container(15550).ListItem.EndTime,, • ]$INFO[Container(15550).ListItem.Genre]</value>
		</variable>
	<variable name="15560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-15560">
		<value condition="String.Contains(Container(15560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15560).ListItem.label] $INFO[Container(15560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Title) + String.Contains(Container(15560).ListItem.FolderPath, pvr://)">$INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Season) + !String.IsEmpty(Container(15560).ListItem.Episode) + !String.Contains(Container(15560).ListItem.TvShowTitle,Container(15560).ListItem.Title)">[UPPERCASE]S$INFO[Container(15560).ListItem.Season]E$INFO[Container(15560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Title)">$INFO[Container(15560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Label)">$INFO[Container(15560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15560">
		<value condition="!String.IsEmpty(Container(15560).ListItem.TvShowTitle) + !String.IsEmpty(Container(15560).ListItem.Genre)">$INFO[Container(15560).ListItem.TvShowTitle,, • ]$INFO[Container(15560).ListItem.Year,, • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.TvShowTitle)">$INFO[Container(15560).ListItem.TvShowTitle,, • ]$INFO[Container(15560).ListItem.Premiered,, • ]$INFO[Container(15560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Year)">$INFO[Container(15560).ListItem.Year,, • ]$INFO[Container(15560).ListItem.Duration,,min. • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Artist) + !String.IsEmpty(Container(15560).ListItem.Album)">$INFO[Container(15560).ListItem.Artist,, • ]$INFO[Container(15560).ListItem.Album,, • ]$INFO[Container(15560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.Property(StartTime))">$INFO[Container(15560).ListItem.Property(ChannelName),, • ]$INFO[Container(15560).ListItem.Property(StartTime),, - ]$INFO[Container(15560).ListItem.Property(EndTime),, • ]$INFO[Container(15560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15560).ListItem.StartTime)">$INFO[Container(15560).ListItem.ChannelName,, • ]$INFO[Container(15560).ListItem.StartTime,, - ]$INFO[Container(15560).ListItem.EndTime,, • ]$INFO[Container(15560).ListItem.Genre]</value>
		</variable>
	<variable name="15570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-15570">
		<value condition="String.Contains(Container(15570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15570).ListItem.label] $INFO[Container(15570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Title) + String.Contains(Container(15570).ListItem.FolderPath, pvr://)">$INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Season) + !String.IsEmpty(Container(15570).ListItem.Episode) + !String.Contains(Container(15570).ListItem.TvShowTitle,Container(15570).ListItem.Title)">[UPPERCASE]S$INFO[Container(15570).ListItem.Season]E$INFO[Container(15570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Title)">$INFO[Container(15570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Label)">$INFO[Container(15570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15570">
		<value condition="!String.IsEmpty(Container(15570).ListItem.TvShowTitle) + !String.IsEmpty(Container(15570).ListItem.Genre)">$INFO[Container(15570).ListItem.TvShowTitle,, • ]$INFO[Container(15570).ListItem.Year,, • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.TvShowTitle)">$INFO[Container(15570).ListItem.TvShowTitle,, • ]$INFO[Container(15570).ListItem.Premiered,, • ]$INFO[Container(15570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Year)">$INFO[Container(15570).ListItem.Year,, • ]$INFO[Container(15570).ListItem.Duration,,min. • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Artist) + !String.IsEmpty(Container(15570).ListItem.Album)">$INFO[Container(15570).ListItem.Artist,, • ]$INFO[Container(15570).ListItem.Album,, • ]$INFO[Container(15570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.Property(StartTime))">$INFO[Container(15570).ListItem.Property(ChannelName),, • ]$INFO[Container(15570).ListItem.Property(StartTime),, - ]$INFO[Container(15570).ListItem.Property(EndTime),, • ]$INFO[Container(15570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15570).ListItem.StartTime)">$INFO[Container(15570).ListItem.ChannelName,, • ]$INFO[Container(15570).ListItem.StartTime,, - ]$INFO[Container(15570).ListItem.EndTime,, • ]$INFO[Container(15570).ListItem.Genre]</value>
		</variable>
	<variable name="15580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-15580">
		<value condition="String.Contains(Container(15580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(15580).ListItem.label] $INFO[Container(15580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Title) + String.Contains(Container(15580).ListItem.FolderPath, pvr://)">$INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Season) + !String.IsEmpty(Container(15580).ListItem.Episode) + !String.Contains(Container(15580).ListItem.TvShowTitle,Container(15580).ListItem.Title)">[UPPERCASE]S$INFO[Container(15580).ListItem.Season]E$INFO[Container(15580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Title)">$INFO[Container(15580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Label)">$INFO[Container(15580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-15580">
		<value condition="!String.IsEmpty(Container(15580).ListItem.TvShowTitle) + !String.IsEmpty(Container(15580).ListItem.Genre)">$INFO[Container(15580).ListItem.TvShowTitle,, • ]$INFO[Container(15580).ListItem.Year,, • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.TvShowTitle)">$INFO[Container(15580).ListItem.TvShowTitle,, • ]$INFO[Container(15580).ListItem.Premiered,, • ]$INFO[Container(15580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Year)">$INFO[Container(15580).ListItem.Year,, • ]$INFO[Container(15580).ListItem.Duration,,min. • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Artist) + !String.IsEmpty(Container(15580).ListItem.Album)">$INFO[Container(15580).ListItem.Artist,, • ]$INFO[Container(15580).ListItem.Album,, • ]$INFO[Container(15580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.Property(StartTime))">$INFO[Container(15580).ListItem.Property(ChannelName),, • ]$INFO[Container(15580).ListItem.Property(StartTime),, - ]$INFO[Container(15580).ListItem.Property(EndTime),, • ]$INFO[Container(15580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(15580).ListItem.StartTime)">$INFO[Container(15580).ListItem.ChannelName,, • ]$INFO[Container(15580).ListItem.StartTime,, - ]$INFO[Container(15580).ListItem.EndTime,, • ]$INFO[Container(15580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-15">
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),3)">Sports PPV's (UFC All PPVs)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),2)">Sports PPV's (WWE All PPVs)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-sports-ppvs),1)">Unwatched (UFC PPV's)</value>
		<value>Unwatched (WWE PPV's)</value>
		</variable>
	<variable name="16510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (Stand-Up Comedy).xsp</value>
		</variable>
	<variable name="widgetinfolabel-16510">
		<value condition="String.Contains(Container(16510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16510).ListItem.label] $INFO[Container(16510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Title) + String.Contains(Container(16510).ListItem.FolderPath, pvr://)">$INFO[Container(16510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Season) + !String.IsEmpty(Container(16510).ListItem.Episode) + !String.Contains(Container(16510).ListItem.TvShowTitle,Container(16510).ListItem.Title)">[UPPERCASE]S$INFO[Container(16510).ListItem.Season]E$INFO[Container(16510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Title)">$INFO[Container(16510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Label)">$INFO[Container(16510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16510">
		<value condition="!String.IsEmpty(Container(16510).ListItem.TvShowTitle) + !String.IsEmpty(Container(16510).ListItem.Genre)">$INFO[Container(16510).ListItem.TvShowTitle,, • ]$INFO[Container(16510).ListItem.Year,, • ]$INFO[Container(16510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.TvShowTitle)">$INFO[Container(16510).ListItem.TvShowTitle,, • ]$INFO[Container(16510).ListItem.Premiered,, • ]$INFO[Container(16510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Year)">$INFO[Container(16510).ListItem.Year,, • ]$INFO[Container(16510).ListItem.Duration,,min. • ]$INFO[Container(16510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Artist) + !String.IsEmpty(Container(16510).ListItem.Album)">$INFO[Container(16510).ListItem.Artist,, • ]$INFO[Container(16510).ListItem.Album,, • ]$INFO[Container(16510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.Property(StartTime))">$INFO[Container(16510).ListItem.Property(ChannelName),, • ]$INFO[Container(16510).ListItem.Property(StartTime),, - ]$INFO[Container(16510).ListItem.Property(EndTime),, • ]$INFO[Container(16510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16510).ListItem.StartTime)">$INFO[Container(16510).ListItem.ChannelName,, • ]$INFO[Container(16510).ListItem.StartTime,, - ]$INFO[Container(16510).ListItem.EndTime,, • ]$INFO[Container(16510).ListItem.Genre]</value>
		</variable>
	<variable name="16520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (Music Concerts).xsp</value>
		</variable>
	<variable name="widgetinfolabel-16520">
		<value condition="String.Contains(Container(16520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16520).ListItem.label] $INFO[Container(16520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Title) + String.Contains(Container(16520).ListItem.FolderPath, pvr://)">$INFO[Container(16520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Season) + !String.IsEmpty(Container(16520).ListItem.Episode) + !String.Contains(Container(16520).ListItem.TvShowTitle,Container(16520).ListItem.Title)">[UPPERCASE]S$INFO[Container(16520).ListItem.Season]E$INFO[Container(16520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Title)">$INFO[Container(16520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Label)">$INFO[Container(16520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16520">
		<value condition="!String.IsEmpty(Container(16520).ListItem.TvShowTitle) + !String.IsEmpty(Container(16520).ListItem.Genre)">$INFO[Container(16520).ListItem.TvShowTitle,, • ]$INFO[Container(16520).ListItem.Year,, • ]$INFO[Container(16520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.TvShowTitle)">$INFO[Container(16520).ListItem.TvShowTitle,, • ]$INFO[Container(16520).ListItem.Premiered,, • ]$INFO[Container(16520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Year)">$INFO[Container(16520).ListItem.Year,, • ]$INFO[Container(16520).ListItem.Duration,,min. • ]$INFO[Container(16520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Artist) + !String.IsEmpty(Container(16520).ListItem.Album)">$INFO[Container(16520).ListItem.Artist,, • ]$INFO[Container(16520).ListItem.Album,, • ]$INFO[Container(16520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.Property(StartTime))">$INFO[Container(16520).ListItem.Property(ChannelName),, • ]$INFO[Container(16520).ListItem.Property(StartTime),, - ]$INFO[Container(16520).ListItem.Property(EndTime),, • ]$INFO[Container(16520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16520).ListItem.StartTime)">$INFO[Container(16520).ListItem.ChannelName,, • ]$INFO[Container(16520).ListItem.StartTime,, - ]$INFO[Container(16520).ListItem.EndTime,, • ]$INFO[Container(16520).ListItem.Genre]</value>
		</variable>
	<variable name="16530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/On-Stage (Stand-Up Comedy).xsp</value>
		</variable>
	<variable name="widgetinfolabel-16530">
		<value condition="String.Contains(Container(16530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16530).ListItem.label] $INFO[Container(16530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Title) + String.Contains(Container(16530).ListItem.FolderPath, pvr://)">$INFO[Container(16530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Season) + !String.IsEmpty(Container(16530).ListItem.Episode) + !String.Contains(Container(16530).ListItem.TvShowTitle,Container(16530).ListItem.Title)">[UPPERCASE]S$INFO[Container(16530).ListItem.Season]E$INFO[Container(16530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Title)">$INFO[Container(16530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Label)">$INFO[Container(16530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16530">
		<value condition="!String.IsEmpty(Container(16530).ListItem.TvShowTitle) + !String.IsEmpty(Container(16530).ListItem.Genre)">$INFO[Container(16530).ListItem.TvShowTitle,, • ]$INFO[Container(16530).ListItem.Year,, • ]$INFO[Container(16530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.TvShowTitle)">$INFO[Container(16530).ListItem.TvShowTitle,, • ]$INFO[Container(16530).ListItem.Premiered,, • ]$INFO[Container(16530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Year)">$INFO[Container(16530).ListItem.Year,, • ]$INFO[Container(16530).ListItem.Duration,,min. • ]$INFO[Container(16530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Artist) + !String.IsEmpty(Container(16530).ListItem.Album)">$INFO[Container(16530).ListItem.Artist,, • ]$INFO[Container(16530).ListItem.Album,, • ]$INFO[Container(16530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.Property(StartTime))">$INFO[Container(16530).ListItem.Property(ChannelName),, • ]$INFO[Container(16530).ListItem.Property(StartTime),, - ]$INFO[Container(16530).ListItem.Property(EndTime),, • ]$INFO[Container(16530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16530).ListItem.StartTime)">$INFO[Container(16530).ListItem.ChannelName,, • ]$INFO[Container(16530).ListItem.StartTime,, - ]$INFO[Container(16530).ListItem.EndTime,, • ]$INFO[Container(16530).ListItem.Genre]</value>
		</variable>
	<variable name="16540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/On-Stage (Music Concerts).xsp</value>
		</variable>
	<variable name="widgetinfolabel-16540">
		<value condition="String.Contains(Container(16540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16540).ListItem.label] $INFO[Container(16540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Title) + String.Contains(Container(16540).ListItem.FolderPath, pvr://)">$INFO[Container(16540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Season) + !String.IsEmpty(Container(16540).ListItem.Episode) + !String.Contains(Container(16540).ListItem.TvShowTitle,Container(16540).ListItem.Title)">[UPPERCASE]S$INFO[Container(16540).ListItem.Season]E$INFO[Container(16540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Title)">$INFO[Container(16540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Label)">$INFO[Container(16540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16540">
		<value condition="!String.IsEmpty(Container(16540).ListItem.TvShowTitle) + !String.IsEmpty(Container(16540).ListItem.Genre)">$INFO[Container(16540).ListItem.TvShowTitle,, • ]$INFO[Container(16540).ListItem.Year,, • ]$INFO[Container(16540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.TvShowTitle)">$INFO[Container(16540).ListItem.TvShowTitle,, • ]$INFO[Container(16540).ListItem.Premiered,, • ]$INFO[Container(16540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Year)">$INFO[Container(16540).ListItem.Year,, • ]$INFO[Container(16540).ListItem.Duration,,min. • ]$INFO[Container(16540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Artist) + !String.IsEmpty(Container(16540).ListItem.Album)">$INFO[Container(16540).ListItem.Artist,, • ]$INFO[Container(16540).ListItem.Album,, • ]$INFO[Container(16540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.Property(StartTime))">$INFO[Container(16540).ListItem.Property(ChannelName),, • ]$INFO[Container(16540).ListItem.Property(StartTime),, - ]$INFO[Container(16540).ListItem.Property(EndTime),, • ]$INFO[Container(16540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16540).ListItem.StartTime)">$INFO[Container(16540).ListItem.ChannelName,, • ]$INFO[Container(16540).ListItem.StartTime,, - ]$INFO[Container(16540).ListItem.EndTime,, • ]$INFO[Container(16540).ListItem.Genre]</value>
		</variable>
	<variable name="16550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-16550">
		<value condition="String.Contains(Container(16550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16550).ListItem.label] $INFO[Container(16550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Title) + String.Contains(Container(16550).ListItem.FolderPath, pvr://)">$INFO[Container(16550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Season) + !String.IsEmpty(Container(16550).ListItem.Episode) + !String.Contains(Container(16550).ListItem.TvShowTitle,Container(16550).ListItem.Title)">[UPPERCASE]S$INFO[Container(16550).ListItem.Season]E$INFO[Container(16550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Title)">$INFO[Container(16550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Label)">$INFO[Container(16550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16550">
		<value condition="!String.IsEmpty(Container(16550).ListItem.TvShowTitle) + !String.IsEmpty(Container(16550).ListItem.Genre)">$INFO[Container(16550).ListItem.TvShowTitle,, • ]$INFO[Container(16550).ListItem.Year,, • ]$INFO[Container(16550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.TvShowTitle)">$INFO[Container(16550).ListItem.TvShowTitle,, • ]$INFO[Container(16550).ListItem.Premiered,, • ]$INFO[Container(16550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Year)">$INFO[Container(16550).ListItem.Year,, • ]$INFO[Container(16550).ListItem.Duration,,min. • ]$INFO[Container(16550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Artist) + !String.IsEmpty(Container(16550).ListItem.Album)">$INFO[Container(16550).ListItem.Artist,, • ]$INFO[Container(16550).ListItem.Album,, • ]$INFO[Container(16550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.Property(StartTime))">$INFO[Container(16550).ListItem.Property(ChannelName),, • ]$INFO[Container(16550).ListItem.Property(StartTime),, - ]$INFO[Container(16550).ListItem.Property(EndTime),, • ]$INFO[Container(16550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16550).ListItem.StartTime)">$INFO[Container(16550).ListItem.ChannelName,, • ]$INFO[Container(16550).ListItem.StartTime,, - ]$INFO[Container(16550).ListItem.EndTime,, • ]$INFO[Container(16550).ListItem.Genre]</value>
		</variable>
	<variable name="16560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-16560">
		<value condition="String.Contains(Container(16560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16560).ListItem.label] $INFO[Container(16560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Title) + String.Contains(Container(16560).ListItem.FolderPath, pvr://)">$INFO[Container(16560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Season) + !String.IsEmpty(Container(16560).ListItem.Episode) + !String.Contains(Container(16560).ListItem.TvShowTitle,Container(16560).ListItem.Title)">[UPPERCASE]S$INFO[Container(16560).ListItem.Season]E$INFO[Container(16560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Title)">$INFO[Container(16560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Label)">$INFO[Container(16560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16560">
		<value condition="!String.IsEmpty(Container(16560).ListItem.TvShowTitle) + !String.IsEmpty(Container(16560).ListItem.Genre)">$INFO[Container(16560).ListItem.TvShowTitle,, • ]$INFO[Container(16560).ListItem.Year,, • ]$INFO[Container(16560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.TvShowTitle)">$INFO[Container(16560).ListItem.TvShowTitle,, • ]$INFO[Container(16560).ListItem.Premiered,, • ]$INFO[Container(16560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Year)">$INFO[Container(16560).ListItem.Year,, • ]$INFO[Container(16560).ListItem.Duration,,min. • ]$INFO[Container(16560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Artist) + !String.IsEmpty(Container(16560).ListItem.Album)">$INFO[Container(16560).ListItem.Artist,, • ]$INFO[Container(16560).ListItem.Album,, • ]$INFO[Container(16560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.Property(StartTime))">$INFO[Container(16560).ListItem.Property(ChannelName),, • ]$INFO[Container(16560).ListItem.Property(StartTime),, - ]$INFO[Container(16560).ListItem.Property(EndTime),, • ]$INFO[Container(16560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16560).ListItem.StartTime)">$INFO[Container(16560).ListItem.ChannelName,, • ]$INFO[Container(16560).ListItem.StartTime,, - ]$INFO[Container(16560).ListItem.EndTime,, • ]$INFO[Container(16560).ListItem.Genre]</value>
		</variable>
	<variable name="16570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-16570">
		<value condition="String.Contains(Container(16570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16570).ListItem.label] $INFO[Container(16570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Title) + String.Contains(Container(16570).ListItem.FolderPath, pvr://)">$INFO[Container(16570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Season) + !String.IsEmpty(Container(16570).ListItem.Episode) + !String.Contains(Container(16570).ListItem.TvShowTitle,Container(16570).ListItem.Title)">[UPPERCASE]S$INFO[Container(16570).ListItem.Season]E$INFO[Container(16570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Title)">$INFO[Container(16570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Label)">$INFO[Container(16570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16570">
		<value condition="!String.IsEmpty(Container(16570).ListItem.TvShowTitle) + !String.IsEmpty(Container(16570).ListItem.Genre)">$INFO[Container(16570).ListItem.TvShowTitle,, • ]$INFO[Container(16570).ListItem.Year,, • ]$INFO[Container(16570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.TvShowTitle)">$INFO[Container(16570).ListItem.TvShowTitle,, • ]$INFO[Container(16570).ListItem.Premiered,, • ]$INFO[Container(16570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Year)">$INFO[Container(16570).ListItem.Year,, • ]$INFO[Container(16570).ListItem.Duration,,min. • ]$INFO[Container(16570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Artist) + !String.IsEmpty(Container(16570).ListItem.Album)">$INFO[Container(16570).ListItem.Artist,, • ]$INFO[Container(16570).ListItem.Album,, • ]$INFO[Container(16570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.Property(StartTime))">$INFO[Container(16570).ListItem.Property(ChannelName),, • ]$INFO[Container(16570).ListItem.Property(StartTime),, - ]$INFO[Container(16570).ListItem.Property(EndTime),, • ]$INFO[Container(16570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16570).ListItem.StartTime)">$INFO[Container(16570).ListItem.ChannelName,, • ]$INFO[Container(16570).ListItem.StartTime,, - ]$INFO[Container(16570).ListItem.EndTime,, • ]$INFO[Container(16570).ListItem.Genre]</value>
		</variable>
	<variable name="16580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-16580">
		<value condition="String.Contains(Container(16580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(16580).ListItem.label] $INFO[Container(16580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Title) + String.Contains(Container(16580).ListItem.FolderPath, pvr://)">$INFO[Container(16580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Season) + !String.IsEmpty(Container(16580).ListItem.Episode) + !String.Contains(Container(16580).ListItem.TvShowTitle,Container(16580).ListItem.Title)">[UPPERCASE]S$INFO[Container(16580).ListItem.Season]E$INFO[Container(16580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(16580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Title)">$INFO[Container(16580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Label)">$INFO[Container(16580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-16580">
		<value condition="!String.IsEmpty(Container(16580).ListItem.TvShowTitle) + !String.IsEmpty(Container(16580).ListItem.Genre)">$INFO[Container(16580).ListItem.TvShowTitle,, • ]$INFO[Container(16580).ListItem.Year,, • ]$INFO[Container(16580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.TvShowTitle)">$INFO[Container(16580).ListItem.TvShowTitle,, • ]$INFO[Container(16580).ListItem.Premiered,, • ]$INFO[Container(16580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Year)">$INFO[Container(16580).ListItem.Year,, • ]$INFO[Container(16580).ListItem.Duration,,min. • ]$INFO[Container(16580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Artist) + !String.IsEmpty(Container(16580).ListItem.Album)">$INFO[Container(16580).ListItem.Artist,, • ]$INFO[Container(16580).ListItem.Album,, • ]$INFO[Container(16580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.Property(StartTime))">$INFO[Container(16580).ListItem.Property(ChannelName),, • ]$INFO[Container(16580).ListItem.Property(StartTime),, - ]$INFO[Container(16580).ListItem.Property(EndTime),, • ]$INFO[Container(16580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(16580).ListItem.StartTime)">$INFO[Container(16580).ListItem.ChannelName,, • ]$INFO[Container(16580).ListItem.StartTime,, - ]$INFO[Container(16580).ListItem.EndTime,, • ]$INFO[Container(16580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-16">
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),3)">On-Stage (Music Concerts)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),2)">On-Stage (Stand-Up Comedy)</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-on-stage),1)">Unwatched (Music Concerts)</value>
		<value>Unwatched (Stand-Up Comedy)</value>
		</variable>
	<variable name="17510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Unwatched (Movies).xsp</value>
		</variable>
	<variable name="widgetinfolabel-17510">
		<value condition="String.Contains(Container(17510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17510).ListItem.label] $INFO[Container(17510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Title) + String.Contains(Container(17510).ListItem.FolderPath, pvr://)">$INFO[Container(17510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Season) + !String.IsEmpty(Container(17510).ListItem.Episode) + !String.Contains(Container(17510).ListItem.TvShowTitle,Container(17510).ListItem.Title)">[UPPERCASE]S$INFO[Container(17510).ListItem.Season]E$INFO[Container(17510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Title)">$INFO[Container(17510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Label)">$INFO[Container(17510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17510">
		<value condition="!String.IsEmpty(Container(17510).ListItem.TvShowTitle) + !String.IsEmpty(Container(17510).ListItem.Genre)">$INFO[Container(17510).ListItem.TvShowTitle,, • ]$INFO[Container(17510).ListItem.Year,, • ]$INFO[Container(17510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.TvShowTitle)">$INFO[Container(17510).ListItem.TvShowTitle,, • ]$INFO[Container(17510).ListItem.Premiered,, • ]$INFO[Container(17510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Year)">$INFO[Container(17510).ListItem.Year,, • ]$INFO[Container(17510).ListItem.Duration,,min. • ]$INFO[Container(17510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Artist) + !String.IsEmpty(Container(17510).ListItem.Album)">$INFO[Container(17510).ListItem.Artist,, • ]$INFO[Container(17510).ListItem.Album,, • ]$INFO[Container(17510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.Property(StartTime))">$INFO[Container(17510).ListItem.Property(ChannelName),, • ]$INFO[Container(17510).ListItem.Property(StartTime),, - ]$INFO[Container(17510).ListItem.Property(EndTime),, • ]$INFO[Container(17510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17510).ListItem.StartTime)">$INFO[Container(17510).ListItem.ChannelName,, • ]$INFO[Container(17510).ListItem.StartTime,, - ]$INFO[Container(17510).ListItem.EndTime,, • ]$INFO[Container(17510).ListItem.Genre]</value>
		</variable>
	<variable name="17520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.fuzzybritches_v3/?action=movies&amp;url=theaters&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		</variable>
	<variable name="widgetinfolabel-17520">
		<value condition="String.Contains(Container(17520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17520).ListItem.label] $INFO[Container(17520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Title) + String.Contains(Container(17520).ListItem.FolderPath, pvr://)">$INFO[Container(17520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Season) + !String.IsEmpty(Container(17520).ListItem.Episode) + !String.Contains(Container(17520).ListItem.TvShowTitle,Container(17520).ListItem.Title)">[UPPERCASE]S$INFO[Container(17520).ListItem.Season]E$INFO[Container(17520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Title)">$INFO[Container(17520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Label)">$INFO[Container(17520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17520">
		<value condition="!String.IsEmpty(Container(17520).ListItem.TvShowTitle) + !String.IsEmpty(Container(17520).ListItem.Genre)">$INFO[Container(17520).ListItem.TvShowTitle,, • ]$INFO[Container(17520).ListItem.Year,, • ]$INFO[Container(17520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.TvShowTitle)">$INFO[Container(17520).ListItem.TvShowTitle,, • ]$INFO[Container(17520).ListItem.Premiered,, • ]$INFO[Container(17520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Year)">$INFO[Container(17520).ListItem.Year,, • ]$INFO[Container(17520).ListItem.Duration,,min. • ]$INFO[Container(17520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Artist) + !String.IsEmpty(Container(17520).ListItem.Album)">$INFO[Container(17520).ListItem.Artist,, • ]$INFO[Container(17520).ListItem.Album,, • ]$INFO[Container(17520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.Property(StartTime))">$INFO[Container(17520).ListItem.Property(ChannelName),, • ]$INFO[Container(17520).ListItem.Property(StartTime),, - ]$INFO[Container(17520).ListItem.Property(EndTime),, • ]$INFO[Container(17520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17520).ListItem.StartTime)">$INFO[Container(17520).ListItem.ChannelName,, • ]$INFO[Container(17520).ListItem.StartTime,, - ]$INFO[Container(17520).ListItem.EndTime,, • ]$INFO[Container(17520).ListItem.Genre]</value>
		</variable>
	<variable name="17530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17530">
		<value condition="String.Contains(Container(17530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17530).ListItem.label] $INFO[Container(17530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Title) + String.Contains(Container(17530).ListItem.FolderPath, pvr://)">$INFO[Container(17530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Season) + !String.IsEmpty(Container(17530).ListItem.Episode) + !String.Contains(Container(17530).ListItem.TvShowTitle,Container(17530).ListItem.Title)">[UPPERCASE]S$INFO[Container(17530).ListItem.Season]E$INFO[Container(17530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Title)">$INFO[Container(17530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Label)">$INFO[Container(17530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17530">
		<value condition="!String.IsEmpty(Container(17530).ListItem.TvShowTitle) + !String.IsEmpty(Container(17530).ListItem.Genre)">$INFO[Container(17530).ListItem.TvShowTitle,, • ]$INFO[Container(17530).ListItem.Year,, • ]$INFO[Container(17530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.TvShowTitle)">$INFO[Container(17530).ListItem.TvShowTitle,, • ]$INFO[Container(17530).ListItem.Premiered,, • ]$INFO[Container(17530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Year)">$INFO[Container(17530).ListItem.Year,, • ]$INFO[Container(17530).ListItem.Duration,,min. • ]$INFO[Container(17530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Artist) + !String.IsEmpty(Container(17530).ListItem.Album)">$INFO[Container(17530).ListItem.Artist,, • ]$INFO[Container(17530).ListItem.Album,, • ]$INFO[Container(17530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.Property(StartTime))">$INFO[Container(17530).ListItem.Property(ChannelName),, • ]$INFO[Container(17530).ListItem.Property(StartTime),, - ]$INFO[Container(17530).ListItem.Property(EndTime),, • ]$INFO[Container(17530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17530).ListItem.StartTime)">$INFO[Container(17530).ListItem.ChannelName,, • ]$INFO[Container(17530).ListItem.StartTime,, - ]$INFO[Container(17530).ListItem.EndTime,, • ]$INFO[Container(17530).ListItem.Genre]</value>
		</variable>
	<variable name="17540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17540">
		<value condition="String.Contains(Container(17540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17540).ListItem.label] $INFO[Container(17540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Title) + String.Contains(Container(17540).ListItem.FolderPath, pvr://)">$INFO[Container(17540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Season) + !String.IsEmpty(Container(17540).ListItem.Episode) + !String.Contains(Container(17540).ListItem.TvShowTitle,Container(17540).ListItem.Title)">[UPPERCASE]S$INFO[Container(17540).ListItem.Season]E$INFO[Container(17540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Title)">$INFO[Container(17540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Label)">$INFO[Container(17540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17540">
		<value condition="!String.IsEmpty(Container(17540).ListItem.TvShowTitle) + !String.IsEmpty(Container(17540).ListItem.Genre)">$INFO[Container(17540).ListItem.TvShowTitle,, • ]$INFO[Container(17540).ListItem.Year,, • ]$INFO[Container(17540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.TvShowTitle)">$INFO[Container(17540).ListItem.TvShowTitle,, • ]$INFO[Container(17540).ListItem.Premiered,, • ]$INFO[Container(17540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Year)">$INFO[Container(17540).ListItem.Year,, • ]$INFO[Container(17540).ListItem.Duration,,min. • ]$INFO[Container(17540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Artist) + !String.IsEmpty(Container(17540).ListItem.Album)">$INFO[Container(17540).ListItem.Artist,, • ]$INFO[Container(17540).ListItem.Album,, • ]$INFO[Container(17540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.Property(StartTime))">$INFO[Container(17540).ListItem.Property(ChannelName),, • ]$INFO[Container(17540).ListItem.Property(StartTime),, - ]$INFO[Container(17540).ListItem.Property(EndTime),, • ]$INFO[Container(17540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17540).ListItem.StartTime)">$INFO[Container(17540).ListItem.ChannelName,, • ]$INFO[Container(17540).ListItem.StartTime,, - ]$INFO[Container(17540).ListItem.EndTime,, • ]$INFO[Container(17540).ListItem.Genre]</value>
		</variable>
	<variable name="17550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17550">
		<value condition="String.Contains(Container(17550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17550).ListItem.label] $INFO[Container(17550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Title) + String.Contains(Container(17550).ListItem.FolderPath, pvr://)">$INFO[Container(17550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Season) + !String.IsEmpty(Container(17550).ListItem.Episode) + !String.Contains(Container(17550).ListItem.TvShowTitle,Container(17550).ListItem.Title)">[UPPERCASE]S$INFO[Container(17550).ListItem.Season]E$INFO[Container(17550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Title)">$INFO[Container(17550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Label)">$INFO[Container(17550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17550">
		<value condition="!String.IsEmpty(Container(17550).ListItem.TvShowTitle) + !String.IsEmpty(Container(17550).ListItem.Genre)">$INFO[Container(17550).ListItem.TvShowTitle,, • ]$INFO[Container(17550).ListItem.Year,, • ]$INFO[Container(17550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.TvShowTitle)">$INFO[Container(17550).ListItem.TvShowTitle,, • ]$INFO[Container(17550).ListItem.Premiered,, • ]$INFO[Container(17550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Year)">$INFO[Container(17550).ListItem.Year,, • ]$INFO[Container(17550).ListItem.Duration,,min. • ]$INFO[Container(17550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Artist) + !String.IsEmpty(Container(17550).ListItem.Album)">$INFO[Container(17550).ListItem.Artist,, • ]$INFO[Container(17550).ListItem.Album,, • ]$INFO[Container(17550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.Property(StartTime))">$INFO[Container(17550).ListItem.Property(ChannelName),, • ]$INFO[Container(17550).ListItem.Property(StartTime),, - ]$INFO[Container(17550).ListItem.Property(EndTime),, • ]$INFO[Container(17550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17550).ListItem.StartTime)">$INFO[Container(17550).ListItem.ChannelName,, • ]$INFO[Container(17550).ListItem.StartTime,, - ]$INFO[Container(17550).ListItem.EndTime,, • ]$INFO[Container(17550).ListItem.Genre]</value>
		</variable>
	<variable name="17560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17560">
		<value condition="String.Contains(Container(17560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17560).ListItem.label] $INFO[Container(17560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Title) + String.Contains(Container(17560).ListItem.FolderPath, pvr://)">$INFO[Container(17560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Season) + !String.IsEmpty(Container(17560).ListItem.Episode) + !String.Contains(Container(17560).ListItem.TvShowTitle,Container(17560).ListItem.Title)">[UPPERCASE]S$INFO[Container(17560).ListItem.Season]E$INFO[Container(17560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Title)">$INFO[Container(17560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Label)">$INFO[Container(17560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17560">
		<value condition="!String.IsEmpty(Container(17560).ListItem.TvShowTitle) + !String.IsEmpty(Container(17560).ListItem.Genre)">$INFO[Container(17560).ListItem.TvShowTitle,, • ]$INFO[Container(17560).ListItem.Year,, • ]$INFO[Container(17560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.TvShowTitle)">$INFO[Container(17560).ListItem.TvShowTitle,, • ]$INFO[Container(17560).ListItem.Premiered,, • ]$INFO[Container(17560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Year)">$INFO[Container(17560).ListItem.Year,, • ]$INFO[Container(17560).ListItem.Duration,,min. • ]$INFO[Container(17560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Artist) + !String.IsEmpty(Container(17560).ListItem.Album)">$INFO[Container(17560).ListItem.Artist,, • ]$INFO[Container(17560).ListItem.Album,, • ]$INFO[Container(17560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.Property(StartTime))">$INFO[Container(17560).ListItem.Property(ChannelName),, • ]$INFO[Container(17560).ListItem.Property(StartTime),, - ]$INFO[Container(17560).ListItem.Property(EndTime),, • ]$INFO[Container(17560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17560).ListItem.StartTime)">$INFO[Container(17560).ListItem.ChannelName,, • ]$INFO[Container(17560).ListItem.StartTime,, - ]$INFO[Container(17560).ListItem.EndTime,, • ]$INFO[Container(17560).ListItem.Genre]</value>
		</variable>
	<variable name="17570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17570">
		<value condition="String.Contains(Container(17570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17570).ListItem.label] $INFO[Container(17570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Title) + String.Contains(Container(17570).ListItem.FolderPath, pvr://)">$INFO[Container(17570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Season) + !String.IsEmpty(Container(17570).ListItem.Episode) + !String.Contains(Container(17570).ListItem.TvShowTitle,Container(17570).ListItem.Title)">[UPPERCASE]S$INFO[Container(17570).ListItem.Season]E$INFO[Container(17570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Title)">$INFO[Container(17570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Label)">$INFO[Container(17570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17570">
		<value condition="!String.IsEmpty(Container(17570).ListItem.TvShowTitle) + !String.IsEmpty(Container(17570).ListItem.Genre)">$INFO[Container(17570).ListItem.TvShowTitle,, • ]$INFO[Container(17570).ListItem.Year,, • ]$INFO[Container(17570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.TvShowTitle)">$INFO[Container(17570).ListItem.TvShowTitle,, • ]$INFO[Container(17570).ListItem.Premiered,, • ]$INFO[Container(17570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Year)">$INFO[Container(17570).ListItem.Year,, • ]$INFO[Container(17570).ListItem.Duration,,min. • ]$INFO[Container(17570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Artist) + !String.IsEmpty(Container(17570).ListItem.Album)">$INFO[Container(17570).ListItem.Artist,, • ]$INFO[Container(17570).ListItem.Album,, • ]$INFO[Container(17570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.Property(StartTime))">$INFO[Container(17570).ListItem.Property(ChannelName),, • ]$INFO[Container(17570).ListItem.Property(StartTime),, - ]$INFO[Container(17570).ListItem.Property(EndTime),, • ]$INFO[Container(17570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17570).ListItem.StartTime)">$INFO[Container(17570).ListItem.ChannelName,, • ]$INFO[Container(17570).ListItem.StartTime,, - ]$INFO[Container(17570).ListItem.EndTime,, • ]$INFO[Container(17570).ListItem.Genre]</value>
		</variable>
	<variable name="17580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-17580">
		<value condition="String.Contains(Container(17580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(17580).ListItem.label] $INFO[Container(17580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Title) + String.Contains(Container(17580).ListItem.FolderPath, pvr://)">$INFO[Container(17580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Season) + !String.IsEmpty(Container(17580).ListItem.Episode) + !String.Contains(Container(17580).ListItem.TvShowTitle,Container(17580).ListItem.Title)">[UPPERCASE]S$INFO[Container(17580).ListItem.Season]E$INFO[Container(17580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(17580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Title)">$INFO[Container(17580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Label)">$INFO[Container(17580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-17580">
		<value condition="!String.IsEmpty(Container(17580).ListItem.TvShowTitle) + !String.IsEmpty(Container(17580).ListItem.Genre)">$INFO[Container(17580).ListItem.TvShowTitle,, • ]$INFO[Container(17580).ListItem.Year,, • ]$INFO[Container(17580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.TvShowTitle)">$INFO[Container(17580).ListItem.TvShowTitle,, • ]$INFO[Container(17580).ListItem.Premiered,, • ]$INFO[Container(17580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Year)">$INFO[Container(17580).ListItem.Year,, • ]$INFO[Container(17580).ListItem.Duration,,min. • ]$INFO[Container(17580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Artist) + !String.IsEmpty(Container(17580).ListItem.Album)">$INFO[Container(17580).ListItem.Artist,, • ]$INFO[Container(17580).ListItem.Album,, • ]$INFO[Container(17580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.Property(StartTime))">$INFO[Container(17580).ListItem.Property(ChannelName),, • ]$INFO[Container(17580).ListItem.Property(StartTime),, - ]$INFO[Container(17580).ListItem.Property(EndTime),, • ]$INFO[Container(17580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(17580).ListItem.StartTime)">$INFO[Container(17580).ListItem.ChannelName,, • ]$INFO[Container(17580).ListItem.StartTime,, - ]$INFO[Container(17580).ListItem.EndTime,, • ]$INFO[Container(17580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-17">
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-20342),1)">[B][COLOR blue]• [/COLOR][/B]In Theaters[B][COLOR blue] •[/COLOR][/B]</value>
		<value>Unwatched (Movies)</value>
		</variable>
	<include name="skinshortcuts-template-spotlightwidget">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	</includes>
